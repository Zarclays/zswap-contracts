/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../../contracts/MasterChef.sol/MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ZSwapToken",
        name: "_sushi",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sushiPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bonusEndBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusEndBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingSushi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accSushiPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushi",
    outputs: [
      {
        internalType: "contract ZSwapToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100d357601f61176d38819003918201601f19168301916001600160401b038311848410176100d85780849260c0946040528339810103126100d35780516001600160a01b038116908190036100d3578161006260206100c494016100ee565b90604081015160608201519261007f60a0608085015194016100ee565b9461008933610102565b600060085560018060a01b0319600154161760015560018060a01b031660018060a01b03196002541617600255600455600355600955610102565b604051611623908161014a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100d357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608080604052600436101561001357600080fd5b60003560e01c908163081e3eda14610e84575080630a08790314610e5b5780631526fe2714610dfe57806317caf6f114610de0578063195426ec14610c795780631aed655314610c5b5780631eaaa04514610b2857806323cf311814610add578063441a3e70146109d2578063454b06081461067f57806348cd4cb11461066157806351eb05a6146106455780635312ea8e146105b9578063630b5ba11461059e57806364482f791461052d578063715018a6146104d45780637cd07e47146104ab5780638aa285501461048f5780638d88a90e146104155780638da5cb5b146103ec5780638dbb1e3a146103cb57806393f1a40b1461037a578063b0bcf42a1461035c578063d49e77cd14610333578063e2bbb158146102095763f2fde38b1461013d57600080fd5b3461020457602036600319011261020457610156610eea565b61015e611229565b6001600160a01b031680156101b057600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346102045761021736610f0f565b61022082610e9f565b50600083815260076020908152604080832033845290915290209061024484610f47565b815480610300575b5080546040516323b872dd60e01b602082015233602482015230604482015260648082018690528152610292916001600160a01b031661028d608483610f25565b6113fc565b81548381018091116102ea576102b881600360019464e8d4a510009487550154906111e9565b049101556040519081527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560203392a3005b634e487b7160e01b600052601160045260246000fd5b61032764e8d4a5100061031b61032d936003860154906111e9565b0460018501549061121c565b33611299565b8461024c565b34610204576000366003190112610204576002546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576020600454604051908152f35b3461020457604036600319011261020457610393610ed4565b600435600052600760205260406000209060018060a01b03166000526020526040806000206001815491015482519182526020820152f35b346102045760206103e46103de36610f0f565b90611176565b604051908152f35b34610204576000366003190112610204576000546040516001600160a01b039091168152602090f35b346102045760203660031901126102045761042e610eea565b600254906001600160a01b038216330361045e576001600160a01b03166001600160a01b03199190911617600255005b60405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b6044820152606490fd5b34610204576000366003190112610204576020604051600a8152f35b34610204576000366003190112610204576005546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576104ed611229565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102045760603660031901126102045760243560043561054c610f00565b610554611229565b610591575b610573600854600161056a84610e9f565b5001549061121c565b8281018091116102ea5760019161058c91600855610e9f565b500155005b610599611153565b610559565b34610204576000366003190112610204576105b7611153565b005b3461020457602036600319011261020457600060016004356105da81610e9f565b5090808452600760205261061060408086208690868060a01b03331682526020522092848060a01b0390541683549033906113be565b81546040519081527fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059560203392a38281550155005b34610204576020366003190112610204576105b7600435610f47565b34610204576000366003190112610204576020600954604051908152f35b34610204576020366003190112610204576005546001600160a01b03168015610996576106ad600435610e9f565b5080546040516370a0823160e01b815230600482015291926001600160a01b0390911690602083602481855afa92831561083d57600093610962575b50821580156108f6575b156108925760405163095ea7b360e01b6020808301919091526001600160a01b0392909216602482015260448082018590528152600092906107409061073a606482610f25565b826113fc565b60055460405163ce5494bb60e01b815260048101929092529092839160249183916001600160a01b03165af190811561083d57600091610849575b506040516370a0823160e01b815230600482015290916020826024816001600160a01b0387165afa91821561083d57600092610809575b50036107d55781546001600160a01b0319166001600160a01b0391909116179055005b60405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b6044820152606490fd5b9091506020813d602011610835575b8161082560209383610f25565b81010312610204575190846107b2565b3d9150610818565b6040513d6000823e3d90fd5b6020813d60201161088a575b8161086260209383610f25565b810103126108865751906001600160a01b038216820361088357508361077b565b80fd5b5080fd5b3d9150610855565b60405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608490fd5b50604051636eb1769f60e11b815230600482015260248101829052602081604481865afa90811561083d57600091610930575b50156106f3565b90506020813d60201161095a575b8161094b60209383610f25565b81010312610204575185610929565b3d915061093e565b90926020823d60201161098e575b8161097d60209383610f25565b8101031261088357505191846106e9565b3d9150610970565b60405162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b6044820152606490fd5b34610204576109e036610f0f565b6109e982610e9f565b506000838152600760209081526040808320338452909152902080548311610aa357610a75918391610a1a86610f47565b64e8d4a51000610a6182549282610a3760038701958654906111e9565b0493610a4c610327600184019687549061121c565b610a5787835461121c565b80925554906111e9565b0490555433906001600160a01b03166113be565b6040519081527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860203392a3005b60405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606490fd5b34610204576020366003190112610204576004356001600160a01b0381169081900361020457610b0b611229565b6bffffffffffffffffffffffff60a01b6005541617600555600080f35b34610204576060366003190112610204576004356024356001600160a01b0381169081900361020457610b59610f00565b610b61611229565b610c4e575b600954804311600014610c495750435b6008548381018091116102ea57600855604051916080830183811067ffffffffffffffff821117610c33576040528252602082019283526040820190815260608201906000825260065468010000000000000000811015610c3357806001610be19201600655610e9f565b949094610c1d57925184546001600160a01b0319166001600160a01b039190911617845591516001840155905160028301555160039190910155005b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610b76565b610c56611153565b610b66565b34610204576000366003190112610204576020600354604051908152f35b3461020457604036600319011261020457600435610c95610ed4565b610c9e82610e9f565b5091600052600760205260406000209060018060a01b03166000526020526040600020906024600382015491602060018060a01b03825416604051938480926370a0823160e01b82523060048301525afa91821561083d57600092610dac575b50600281015480431180610da3575b610d35575b60206103e486600164e8d4a51000610d2b8984546111e9565b049101549061121c565b610d67916001610d55610d4c610d5e944390611176565b600454906111e9565b910154906111e9565b600854906111fc565b9064e8d4a5100082029180830464e8d4a5100014901517156102ea57610d8c916111fc565b81018091116102ea5781600164e8d4a51000610d12565b50821515610d0d565b90916020823d602011610dd8575b81610dc760209383610f25565b810103126108835750519084610cfe565b3d9150610dba565b34610204576000366003190112610204576020600854604051908152f35b346102045760203660031901126102045760043560065481101561020457610e27608091610e9f565b5060018060a01b03815416906001810154906003600282015491015491604051938452602084015260408301526060820152f35b34610204576000366003190112610204576001546040516001600160a01b039091168152602090f35b34610204576000366003190112610204576020906006548152f35b600654811015610ebe57600660005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b602435906001600160a01b038216820361020457565b600435906001600160a01b038216820361020457565b60443590811515820361020457565b6040906003190112610204576004359060243590565b90601f8019910116810190811067ffffffffffffffff821117610c3357604052565b610f5090610e9f565b50600281019081549060009143111561114e5780546040516370a0823160e01b81523060048201529190602090839060249082906001600160a01b03165afa9182156110e857839261111a575b50811561111257610fc3610d5e610fb8610d4c438854611176565b6001840154906111e9565b6001546002549194916001600160a01b039182169116813b156110f3576040516340c10f1960e01b81526001600160a01b03919091166004820152600a860460248201529082908290604490829084905af18015611107576110f7575b506001549091906001600160a01b0316803b156110f3576040516340c10f1960e01b8152306004820152602481018690529083908290604490829084905af180156110e8579083916110d3575b50506003019182549364e8d4a5100081029080820464e8d4a5100014901517156110bf579061109b916111fc565b83018093116110ab575055439055565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b83526011600452602483fd5b816110dd91610f25565b61088657813861106d565b6040513d85823e3d90fd5b8280fd5b8161110191610f25565b38611020565b6040513d84823e3d90fd5b505050439055565b9091506020813d602011611146575b8161113660209383610f25565b810103126110f357519038610f9d565b3d9150611129565b505050565b60065460005b818110611164575050565b80611170600192610f47565b01611159565b600354918281116111a15761118b925061121c565b600a810290808204600a14901517156102ea5790565b8282106111b5576111b2925061121c565b90565b906111c0908361121c565b91600a830292808404600a14901517156102ea576111dd9161121c565b81018091116102ea5790565b818102929181159184041417156102ea57565b8115611206570490565b634e487b7160e01b600052601260045260246000fd5b919082039182116102ea57565b6000546001600160a01b0316330361123d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90816020910312610204575180151581036102045790565b6001546040516370a0823160e01b815230600482015292906001600160a01b0316602084602481845afa93841561083d5760009461138a575b508382111561135057505060015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935260209183911681600081604481015b03925af1801561083d576113255750565b6113469060203d602011611349575b61133e8183610f25565b810190611281565b50565b503d611334565b60405163a9059cbb60e01b81526001600160a01b039093166004840152602483019190915290915060209082908160008160448101611314565b90936020823d6020116113b6575b816113a560209383610f25565b8101031261088357505192386112d2565b3d9150611398565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526113fa9161028d606483610f25565b565b60018060a01b03166040916000808451926114178685610f25565b602084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602085015260208151910182865af13d15611514573d9067ffffffffffffffff8211610c3357845161148d94909261147e601f8201601f191660200185610f25565b83523d6000602085013e61151d565b80519081159182156114fa575b5050156114a45750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b61150d9250602080918301019101611281565b388061149a565b9161148d926060915b9192901561157f5750815115611531575090565b3b1561153a5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156115925750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b8381106115d55750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016115b356fea26469706673582212200b1de66ef715322e15290f9bae7585781721591c03276015c5a7d269c9a767c664736f6c634300081a0033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sushi: AddressLike,
    _devaddr: AddressLike,
    _sushiPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _bonusEndBlock: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _sushi,
      _devaddr,
      _sushiPerBlock,
      _startBlock,
      _bonusEndBlock,
      owner,
      overrides || {}
    );
  }
  override deploy(
    _sushi: AddressLike,
    _devaddr: AddressLike,
    _sushiPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _bonusEndBlock: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _sushi,
      _devaddr,
      _sushiPerBlock,
      _startBlock,
      _bonusEndBlock,
      owner,
      overrides || {}
    ) as Promise<
      MasterChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MasterChef__factory {
    return super.connect(runner) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new Interface(_abi) as MasterChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MasterChef {
    return new Contract(address, _abi, runner) as unknown as MasterChef;
  }
}
