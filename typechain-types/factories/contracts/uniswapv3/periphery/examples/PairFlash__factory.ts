/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PairFlash,
  PairFlashInterface,
} from "../../../../../contracts/uniswapv3/periphery/examples/PairFlash";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee1",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "amount0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "fee2",
            type: "uint24",
          },
          {
            internalType: "uint24",
            name: "fee3",
            type: "uint24",
          },
        ],
        internalType: "struct PairFlash.FlashParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initFlash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3FlashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620019f3380380620019f383398101604081905262000034916200006a565b6001600160a01b03918216608052811660a0521660c052620000be565b6001600160a01b03811681146200006757600080fd5b50565b6000806000606084860312156200008057600080fd5b83516200008d8162000051565b6020850151909350620000a08162000051565b6040850151909250620000b38162000051565b809150509250925092565b60805160a05160c0516118b262000141600039600081816101d90152818161075501528181610853015281816108c901526109c4015260008181609c0152818161017c01528181610428015281816105490152818161100301528181611063015261112b01526000818161020d015281816102d701526106f201526118b26000f3fe60806040526004361061007f5760003560e01c8063c31c9c071161004e578063c31c9c07146101c7578063c45a0155146101fb578063df2ab5bb1461022f578063e9cbafb01461024257600080fd5b806312210e8a1461012f5780632384463b1461013757806349404b7c146101575780634aa4a4fc1461016a57600080fd5b3661012a573373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74205745544839000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b610128610262565b34801561014357600080fd5b50610128610152366004611428565b610274565b6101286101653660046114f1565b6103f7565b34801561017657600080fd5b5061019e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156101d357600080fd5b5061019e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561020757600080fd5b5061019e7f000000000000000000000000000000000000000000000000000000000000000081565b61012861023d36600461151d565b6105c9565b34801561024e57600080fd5b5061012861025d366004611559565b6106dd565b4715610272576102723347610ab5565b565b60006040518060600160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015162ffffff16815250905060006102fc7f000000000000000000000000000000000000000000000000000000000000000083610b99565b90508073ffffffffffffffffffffffffffffffffffffffff1663490e6cbc30856060015186608001516040518060c0016040528089606001518152602001896080015181526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018960a0015162ffffff1681526020018960c0015162ffffff1681525060405160200161039291906115d9565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016103c09493929190611698565b600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b50505050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190611714565b905082811015610514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e742057455448390000000000000000000000000000604482015260640161011f565b80156105c4576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b1580156105a257600080fd5b505af11580156105b6573d6000803e3d6000fd5b505050506105c48282610ab5565b505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065a9190611714565b9050828110156106c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161011f565b80156106d7576106d7848383610cf2565b50505050565b60006106eb8284018461172d565b905061071b7f00000000000000000000000000000000000000000000000000000000000000008260600151610e62565b50606081015180516020909101518251600090610739908990611831565b9050600087856020015161074d9190611831565b905061077e837f00000000000000000000000000000000000000000000000000000000000000008760200151610e98565b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff858116825286811660208084019182526080808b015162ffffff908116868801908152306060880190815242938801938452938d015160a0880190815260c088018b8152600060e08a018181529a517f414bf3890000000000000000000000000000000000000000000000000000000081529951891660048b01529651881660248a015291519092166044880152925185166064870152905160848601525160a48501525160c48401529251811660e48301527f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610104016020604051808303816000875af115801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c19190611714565b90506108f2857f00000000000000000000000000000000000000000000000000000000000000008860000151610e98565b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff87811682528681166020830190815260a08a81015162ffffff908116858701908152306060870190815242608088019081528e5194880194855260c088018b8152600060e08a018181529a517f414bf3890000000000000000000000000000000000000000000000000000000081529951891660048b01529651881660248a015292519093166044880152518516606487015290516084860152905160a48501525160c48401529251811660e48301527f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610104016020604051808303816000875af1158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190611714565b90508315610a4657610a4686303387611001565b8215610a5857610a5885303386611001565b83821115610a80576000610a6c8584611849565b9050610a7e87308a6040015184611001565b505b82811115610aa8576000610a948483611849565b9050610aa686308a6040015184611001565b505b5050505050505050505050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051610aec9190611860565b60006040518083038185875af1925050503d8060008114610b29576040519150601f19603f3d011682016040523d82523d6000602084013e610b2e565b606091505b50509050806105c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354450000000000000000000000000000000000000000000000000000000000604482015260640161011f565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610bdb57600080fd5b8151602080840151604080860151815173ffffffffffffffffffffffffffffffffffffffff95861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401529085901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201527fa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff60d582015260f501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691610d899190611860565b6000604051808303816000865af19150503d8060008114610dc6576040519150601f19603f3d011682016040523d82523d6000602084013e610dcb565b606091505b5091509150818015610df5575080511580610df5575080806020019051810190610df5919061187c565b610e5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5354000000000000000000000000000000000000000000000000000000000000604482015260640161011f565b5050505050565b6000610e6e8383610b99565b90503373ffffffffffffffffffffffffffffffffffffffff821614610e9257600080fd5b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529151600092839290871691610f2f9190611860565b6000604051808303816000865af19150503d8060008114610f6c576040519150601f19603f3d011682016040523d82523d6000602084013e610f71565b606091505b5091509150818015610f9b575080511580610f9b575080806020019051810190610f9b919061187c565b610e5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f5341000000000000000000000000000000000000000000000000000000000000604482015260640161011f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614801561105c5750804710155b156111a2577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611178573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119c919061187c565b506106d7565b3073ffffffffffffffffffffffffffffffffffffffff8416036111cf576111ca848383610cf2565b6106d7565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528085166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516106d7928792879287928792600092839288169161127891611860565b6000604051808303816000865af19150503d80600081146112b5576040519150601f19603f3d011682016040523d82523d6000602084013e6112ba565b606091505b50915091508180156112e45750805115806112e45750808060200190518101906112e4919061187c565b61134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f5354460000000000000000000000000000000000000000000000000000000000604482015260640161011f565b505050505050565b60405160c0810167ffffffffffffffff8111828210171561139c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b6040516060810167ffffffffffffffff8111828210171561139c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461141057600080fd5b919050565b803562ffffff8116811461141057600080fd5b600060e0828403121561143a57600080fd5b60405160e0810181811067ffffffffffffffff82111715611484577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604052611490836113ec565b815261149e602084016113ec565b60208201526114af60408401611415565b604082015260608301356060820152608083013560808201526114d460a08401611415565b60a08201526114e560c08401611415565b60c08201529392505050565b6000806040838503121561150457600080fd5b82359150611514602084016113ec565b90509250929050565b60008060006060848603121561153257600080fd5b61153b846113ec565b925060208401359150611550604085016113ec565b90509250925092565b6000806000806060858703121561156f57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561159557600080fd5b818701915087601f8301126115a957600080fd5b8135818111156115b857600080fd5b8860208285010111156115ca57600080fd5b95989497505060200194505050565b6000610100820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015191508082511660608501528060208301511660808501525062ffffff60408201511660a084015250608083015161165560c084018262ffffff169052565b5060a0929092015162ffffff1660e0919091015290565b60005b8381101561168757818101518382015260200161166f565b838111156106d75750506000910152565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015282604082015260806060820152600082518060808401526116df8160a085016020870161166c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160a00195945050505050565b60006020828403121561172657600080fd5b5051919050565b600081830361010081121561174157600080fd5b611749611352565b8335815260208401356020820152611763604085016113ec565b604082015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08301121561179857600080fd5b6117a06113a2565b91506117ae606085016113ec565b82526117bc608085016113ec565b60208301526117cd60a08501611415565b60408301528160608201526117e460c08501611415565b60808201526117f560e08501611415565b60a0820152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561184457611844611802565b500190565b60008282101561185b5761185b611802565b500390565b6000825161187281846020870161166c565b9190910192915050565b60006020828403121561188e57600080fd5b8151801515811461189e57600080fd5b939250505056fea164736f6c634300080f000a";

type PairFlashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PairFlashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PairFlash__factory extends ContractFactory {
  constructor(...args: PairFlashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _swapRouter: AddressLike,
    _factory: AddressLike,
    _WETH9: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _swapRouter,
      _factory,
      _WETH9,
      overrides || {}
    );
  }
  override deploy(
    _swapRouter: AddressLike,
    _factory: AddressLike,
    _WETH9: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _swapRouter,
      _factory,
      _WETH9,
      overrides || {}
    ) as Promise<
      PairFlash & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PairFlash__factory {
    return super.connect(runner) as PairFlash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairFlashInterface {
    return new Interface(_abi) as PairFlashInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PairFlash {
    return new Contract(address, _abi, runner) as unknown as PairFlash;
  }
}
