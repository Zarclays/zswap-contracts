/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Base64Test,
  Base64TestInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/Base64Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getGasCostOfEncode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610524806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806312496a1b1461003b57806374b86d1e14610064575b600080fd5b61004e6100493660046102bf565b610085565b60405161005b919061038e565b60405180910390f35b6100776100723660046102bf565b610096565b60405190815260200161005b565b6060610090826100b8565b92915050565b6000805a90506100a5836100b8565b505a6100b19082610430565b9392505050565b606081516000036100d757505060408051602081019091526000815290565b60006040518060600160405280604081526020016104d860409139905060006003845160026101069190610447565b610110919061045f565b61011b90600461049a565b9050600061012a826020610447565b67ffffffffffffffff81111561014257610142610290565b6040519080825280601f01601f19166020018201604052801561016c576020820181803683370190505b509050818152600183018586518101602084015b818310156101d8576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610180565b6003895106600181146101f2576002811461023c57610282565b7f3d3d0000000000000000000000000000000000000000000000000000000000007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe830152610282565b7f3d000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301525b509398975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102d157600080fd5b813567ffffffffffffffff808211156102e957600080fd5b818401915084601f8301126102fd57600080fd5b81358181111561030f5761030f610290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561035557610355610290565b8160405282815287602084870101111561036e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103bb5785810183015185820160400152820161039f565b818111156103cd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561044257610442610401565b500390565b6000821982111561045a5761045a610401565b500190565b600082610495577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104d2576104d2610401565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa164736f6c634300080f000a";

type Base64TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Base64TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Base64Test__factory extends ContractFactory {
  constructor(...args: Base64TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Base64Test & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Base64Test__factory {
    return super.connect(runner) as Base64Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Base64TestInterface {
    return new Interface(_abi) as Base64TestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Base64Test {
    return new Contract(address, _abi, runner) as unknown as Base64Test;
  }
}
