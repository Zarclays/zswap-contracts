/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PathTest,
  PathTestInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/PathTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "decodeFirstPool",
    outputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "getFirstPool",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "getGasCostOfDecodeFirstPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "hasMultiplePools",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "skipToken",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610741806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063bf8b627b11610050578063bf8b627b146100b8578063d7c9ca0c146100cb578063eadc682a146100ec57600080fd5b80637db6e2461461006c5780639dc1c39114610095575b600080fd5b61007f61007a366004610594565b610137565b60405161008c9190610663565b60405180910390f35b6100a86100a3366004610594565b610148565b604051901515815260200161008c565b61007f6100c6366004610594565b610153565b6100de6100d9366004610594565b61015e565b60405190815260200161008c565b6100ff6100fa366004610594565b610182565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815293909216602084015262ffffff169082015260600161008c565b60606101428261019d565b92915050565b6000610142826101c3565b6060610142826101fd565b6000805a905061016d83610226565b5050505a61017b9082610705565b9392505050565b600080600061019084610226565b9250925092509193909250565b6060610142600060146101b160038261071c565b6101bb919061071c565b849190610262565b60006101d16003601461071c565b60146101de60038261071c565b6101e8919061071c565b6101f2919061071c565b825110159050919050565b606061014261020e6003601461071c565b61021a6003601461071c565b84516101bb9190610705565b6000808061023484826103e1565b9250610241846014610471565b90506102596102526003601461071c565b85906103e1565b91509193909250565b60608161027081601f61071c565b10156102dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064015b60405180910390fd5b6102e7828461071c565b84511015610351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016102d4565b60608215801561037057604051915060008252602082016040526103d8565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156103a9578051835260209283019201610391565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60006103ee82601461071c565b83511015610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e6473000000000000000000000060448201526064016102d4565b5001602001516c01000000000000000000000000900490565b60008161047f81600361071c565b10156104e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f7700000000000000000000000000000060448201526064016102d4565b6104f282600361071c565b8351101561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e647300000000000000000000000060448201526064016102d4565b50016003015190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156105a657600080fd5b813567ffffffffffffffff808211156105be57600080fd5b818401915084601f8301126105d257600080fd5b8135818111156105e4576105e4610565565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561062a5761062a610565565b8160405282815287602084870101111561064357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561069057858101830151858201604001528201610674565b818111156106a2576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610717576107176106d6565b500390565b6000821982111561072f5761072f6106d6565b50019056fea164736f6c634300080f000a";

type PathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PathTest__factory extends ContractFactory {
  constructor(...args: PathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PathTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PathTest__factory {
    return super.connect(runner) as PathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PathTestInterface {
    return new Interface(_abi) as PathTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PathTest {
    return new Contract(address, _abi, runner) as unknown as PathTest;
  }
}
