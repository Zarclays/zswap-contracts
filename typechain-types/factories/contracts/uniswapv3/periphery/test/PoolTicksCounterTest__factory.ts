/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PoolTicksCounterTest,
  PoolTicksCounterTestInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/PoolTicksCounterTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickBefore",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickAfter",
        type: "int24",
      },
    ],
    name: "countInitializedTicksCrossed",
    outputs: [
      {
        internalType: "uint32",
        name: "initializedTicksCrossed",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610677908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c634c5b941c1461002857600080fd5b34610587576060366003190112610587576004356001600160a01b0381169081900361058757602435908160020b80830361058757604435938460020b91828603610587576334324e9f60e21b82526000948592602081600481895afa90811561057c579061009f91859161055d575b50826105dd565b60020b60081d60010b6040516334324e9f60e21b81526020816004818a5afa90811561055257610100916100db918791610533575b50846105dd565b60020b07948560ff16936040516334324e9f60e21b81526020816004818c5afa9081156105285790610115918891610509575b508b6105dd565b60020b60081d60010b956040516334324e9f60e21b81526020816004818d5afa9081156104525761015683928e610100938e989796926104e8575b506105dd565b60020b07988960ff169960208a60246040518099819363299ce14b60e11b835260048301525afa9586156104a45783966104af575b5060ff16946001861b1615159c8d610467575b508c61045d575b60405163299ce14b60e11b815260048101879052939291906020856024818f5afa948515610452578295610419575b5060ff16936001851b161515968761039b575b505085610391575b5050858312918215610371575b505015610364579592939290915b60ff60001991161b5b8460010b9660010b9680881361032957871461030c575b60405163299ce14b60e11b8152600481018890526020816024818a5afa908115610300576000916102cc575b5016806000915b6102a6575061ffff63ffffffff911691160163ffffffff81116102905794617fff81146102905760010194600019610213565b634e487b7160e01b600052601160045260246000fd5b9061ffff1661ffff8114610290576001019060001981019080821161029057168061025d565b906020823d82116102f8575b816102e56020938361058c565b810103126102f557505138610256565b80fd5b3d91506102d8565b6040513d6000823e3d90fd5b60ff841660ff0360ff81116102905760ff60001991161c1661022a565b602083858b610354575b610346575b63ffffffff60405191168152f35b61034f90610628565b610338565b9061035e90610628565b90610333565b929592939192909161020a565b83871492509082610386575b505038806101fc565b11159050388061037d565b12935038806101ef565b6040516334324e9f60e21b815292975090916020816004818f5afa92831561040d57906103d0939291926103dc575b50610616565b60020b159438806101e7565b6103ff91925060203d602011610406575b6103f7818361058c565b8101906105c4565b90386103ca565b503d6103ed565b604051903d90823e3d90fd5b9094506020813d60201161044a575b816104356020938361058c565b8101031261044657519360ff6101d4565b5080fd5b3d9150610428565b6040513d84823e3d90fd5b8383139c506101a5565b6040516334324e9f60e21b8152919d506020826004818f5afa9182156104a45790610499929184926103dc5750610616565b60020b159b3861019e565b6040513d85823e3d90fd5b9095506020813d6020116104e0575b816104cb6020938361058c565b810103126104dc57519460ff61018b565b8280fd5b3d91506104be565b61050291925060203d602011610406576103f7818361058c565b9038610150565b610522915060203d602011610406576103f7818361058c565b3861010e565b6040513d89823e3d90fd5b61054c915060203d602011610406576103f7818361058c565b386100d4565b6040513d87823e3d90fd5b610576915060203d602011610406576103f7818361058c565b38610098565b6040513d86823e3d90fd5b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176105ae57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261058757518060020b81036105875790565b60020b9060020b90811561060057627fffff198114600019831416610290570590565b634e487b7160e01b600052601260045260246000fd5b9060020b9081156106005760020b0790565b63ffffffff6000199116019063ffffffff82116102905756fea2646970667358221220614a42557dc255a3834662b17f49e80ba0d7ee3e7cacaadca8eb63b21b51269864736f6c634300081a0033";

type PoolTicksCounterTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolTicksCounterTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolTicksCounterTest__factory extends ContractFactory {
  constructor(...args: PoolTicksCounterTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PoolTicksCounterTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PoolTicksCounterTest__factory {
    return super.connect(runner) as PoolTicksCounterTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolTicksCounterTestInterface {
    return new Interface(_abi) as PoolTicksCounterTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolTicksCounterTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PoolTicksCounterTest;
  }
}
