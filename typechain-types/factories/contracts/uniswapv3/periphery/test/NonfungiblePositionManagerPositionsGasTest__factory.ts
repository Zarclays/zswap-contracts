/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  NonfungiblePositionManagerPositionsGasTest,
  NonfungiblePositionManagerPositionsGasTestInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/NonfungiblePositionManagerPositionsGasTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_nonfungiblePositionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getGasCostOfPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161036738038061036783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516102dd61008a6000396000608b01526102dd6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063994ea42c14610030575b600080fd5b61004361003e36600461012a565b610055565b60405190815260200160405180910390f35b6000805a6040517f99fbab88000000000000000000000000000000000000000000000000000000008152600481018590529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906399fbab889060240161018060405180830381865afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c91906101b1565b5050505050505050505050505a6101239082610292565b9392505050565b60006020828403121561013c57600080fd5b5035919050565b805173ffffffffffffffffffffffffffffffffffffffff8116811461016757600080fd5b919050565b805162ffffff8116811461016757600080fd5b8051600281900b811461016757600080fd5b80516fffffffffffffffffffffffffffffffff8116811461016757600080fd5b6000806000806000806000806000806000806101808d8f0312156101d457600080fd5b8c516bffffffffffffffffffffffff811681146101f057600080fd5b9b506101fe60208e01610143565b9a5061020c60408e01610143565b995061021a60608e01610143565b985061022860808e0161016c565b975061023660a08e0161017f565b965061024460c08e0161017f565b955061025260e08e01610191565b94506101008d015193506101208d015192506102716101408e01610191565b91506102806101608e01610191565b90509295989b509295989b509295989b565b6000828210156102cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea164736f6c634300080f000a";

type NonfungiblePositionManagerPositionsGasTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonfungiblePositionManagerPositionsGasTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonfungiblePositionManagerPositionsGasTest__factory extends ContractFactory {
  constructor(
    ...args: NonfungiblePositionManagerPositionsGasTestConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _nonfungiblePositionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _nonfungiblePositionManager,
      overrides || {}
    );
  }
  override deploy(
    _nonfungiblePositionManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _nonfungiblePositionManager,
      overrides || {}
    ) as Promise<
      NonfungiblePositionManagerPositionsGasTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NonfungiblePositionManagerPositionsGasTest__factory {
    return super.connect(
      runner
    ) as NonfungiblePositionManagerPositionsGasTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonfungiblePositionManagerPositionsGasTestInterface {
    return new Interface(
      _abi
    ) as NonfungiblePositionManagerPositionsGasTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NonfungiblePositionManagerPositionsGasTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NonfungiblePositionManagerPositionsGasTest;
  }
}
