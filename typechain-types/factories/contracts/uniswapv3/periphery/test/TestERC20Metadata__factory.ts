/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestERC20Metadata,
  TestERC20MetadataInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/TestERC20Metadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToMint",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001dc638038062001dc6833981016040819052620000359162000394565b6040805180820190915260018152603160f81b6020820152829081908184600362000061838262000496565b50600462000070828262000496565b5050506200008e6005836200015860201b620007241790919060201c565b61012052620000ab81600662000158602090811b6200072417901c565b61014052815160208084019190912060e052815190820120610100524660a0526200013960e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200014f3384620001a8565b505050620005e3565b6000602083511015620001785762000170836200026f565b9050620001a2565b826200018f83620002b260201b620007551760201c565b906200019c908262000496565b5060ff90505b92915050565b6001600160a01b038216620002045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825462000218919062000562565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f815111156200029d578260405163305a27a960e01b8152600401620001fb919062000589565b8051620002aa82620005be565b179392505050565b90565b505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002ed578181015183820152602001620002d3565b83811115620002fd576000848401525b50505050565b600082601f8301126200031557600080fd5b81516001600160401b0380821115620003325762000332620002ba565b604051601f8301601f19908116603f011681019082821181831017156200035d576200035d620002ba565b816040528381528660208588010111156200037757600080fd5b6200038a846020830160208901620002d0565b9695505050505050565b600080600060608486031215620003aa57600080fd5b835160208501519093506001600160401b0380821115620003ca57600080fd5b620003d88783880162000303565b93506040860151915080821115620003ef57600080fd5b50620003fe8682870162000303565b9150509250925092565b600181811c908216806200041d57607f821691505b6020821081036200043e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b557600081815260208120601f850160051c810160208610156200046d5750805b601f850160051c820191505b818110156200048e5782815560010162000479565b505050505050565b81516001600160401b03811115620004b257620004b2620002ba565b620004ca81620004c3845462000408565b8462000444565b602080601f831160018114620005025760008415620004e95750858301515b600019600386901b1c1916600185901b1785556200048e565b600085815260208120601f198616915b82811015620005335788860151825594840194600190910190840162000512565b5085821015620005525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082198211156200058457634e487b7160e01b600052601160045260246000fd5b500190565b6020815260008251806020840152620005aa816040850160208701620002d0565b601f01601f19169190910160400192915050565b805160208083015191908110156200043e5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516117886200063e6000396000610406015260006103db01526000610d3801526000610d1001526000610c6b01526000610c9501526000610cbf01526117886000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101f6578063a9059cbb14610209578063d505accf1461021c578063dd62ed3e1461023157600080fd5b806370a082311461018a5780637ecebe00146101c057806384b0196e146101d357806395d89b41146101ee57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e5151461016f578063395093511461017757600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610277565b60405161010f91906112be565b60405180910390f35b61012b610126366004611301565b610309565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b36600461132b565b610323565b6040516012815260200161010f565b61013f610347565b61012b610185366004611301565b610356565b61013f610198366004611367565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b61013f6101ce366004611367565b6103a2565b6101db6103cd565b60405161010f9796959493929190611382565b610102610472565b61012b610204366004611301565b610481565b61012b610217366004611301565b610557565b61022f61022a366004611441565b610565565b005b61013f61023f3660046114b4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b606060038054610286906114e7565b80601f01602080910402602001604051908101604052809291908181526020018280546102b2906114e7565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b5050505050905090565b600033610317818585610758565b60019150505b92915050565b60003361033185828561090b565b61033c8585856109e2565b506001949350505050565b6000610351610c51565b905090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190610317908290869061039d908790611534565b610758565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604081205461031d565b6000606080828080836104017f00000000000000000000000000000000000000000000000000000000000000006005610d89565b61042c7f00000000000000000000000000000000000000000000000000000000000000006006610d89565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b606060048054610286906114e7565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091908381101561054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61033c8286868403610758565b6000336103178185856109e2565b834211156105cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610541565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105fe8c610e2d565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061066682610e62565b9050600061067682878787610eaa565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610541565b6107188a8a8a610758565b50505050505050505050565b60006020835110156107405761073983610ed2565b905061031d565b8161074b84826115f0565b5060ff905061031d565b90565b73ffffffffffffffffffffffffffffffffffffffff83166107fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610541565b73ffffffffffffffffffffffffffffffffffffffff821661089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610541565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109dc57818110156109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610541565b6109dc8484848403610758565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610541565b73ffffffffffffffffffffffffffffffffffffffff8216610b28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610541565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610bde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610541565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36109dc565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610cb757507f000000000000000000000000000000000000000000000000000000000000000046145b15610ce157507f000000000000000000000000000000000000000000000000000000000000000090565b610351604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606060ff8314610d9c5761073983610f2e565b818054610da8906114e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd4906114e7565b8015610e215780601f10610df657610100808354040283529160200191610e21565b820191906000526020600020905b815481529060010190602001808311610e0457829003601f168201915b5050505050905061031d565b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090208054600181018255905b50919050565b600061031d610e6f610c51565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000610ebb87878787610f6d565b91509150610ec88161105c565b5095945050505050565b600080829050601f81511115610f1657826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040161054191906112be565b8051610f218261170a565b179392505050565b505050565b60606000610f3b83611212565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fa45750600090506003611053565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ff8573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661104c57600060019250925050611053565b9150600090505b94509492505050565b60008160048111156110705761107061174c565b036110785750565b600181600481111561108c5761108c61174c565b036110f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610541565b60028160048111156111075761110761174c565b0361116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610541565b60038160048111156111825761118261174c565b0361120f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610541565b50565b600060ff8216601f81111561031d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815180845260005b818110156112795760208185018101518683018201520161125d565b8181111561128b576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006112d16020830184611253565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146112fc57600080fd5b919050565b6000806040838503121561131457600080fd5b61131d836112d8565b946020939093013593505050565b60008060006060848603121561134057600080fd5b611349846112d8565b9250611357602085016112d8565b9150604084013590509250925092565b60006020828403121561137957600080fd5b6112d1826112d8565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e0818401526113be60e084018a611253565b83810360408501526113d0818a611253565b6060850189905273ffffffffffffffffffffffffffffffffffffffff8816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561142f57835183529284019291840191600101611413565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561145c57600080fd5b611465886112d8565b9650611473602089016112d8565b95506040880135945060608801359350608088013560ff8116811461149757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114c757600080fd5b6114d0836112d8565b91506114de602084016112d8565b90509250929050565b600181811c908216806114fb57607f821691505b602082108103610e5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000821982111561156e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115610f2957600081815260208120601f850160051c810160208610156115c95750805b601f850160051c820191505b818110156115e8578281556001016115d5565b505050505050565b815167ffffffffffffffff81111561160a5761160a611573565b61161e8161161884546114e7565b846115a2565b602080601f831160018114611671576000841561163b5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556115e8565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156116be5788860151825594840194600190910190840161169f565b50858210156116fa57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b80516020808301519190811015610e5c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910360031b1b16919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c634300080f000a";

type TestERC20MetadataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20MetadataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20Metadata__factory extends ContractFactory {
  constructor(...args: TestERC20MetadataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    amountToMint: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      amountToMint,
      name,
      symbol,
      overrides || {}
    );
  }
  override deploy(
    amountToMint: BigNumberish,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(amountToMint, name, symbol, overrides || {}) as Promise<
      TestERC20Metadata & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestERC20Metadata__factory {
    return super.connect(runner) as TestERC20Metadata__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20MetadataInterface {
    return new Interface(_abi) as TestERC20MetadataInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestERC20Metadata {
    return new Contract(address, _abi, runner) as unknown as TestERC20Metadata;
  }
}
