/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MockTimeSwapRouter,
  MockTimeSwapRouterInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/MockTimeSwapRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "refundETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowed",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitAllowedIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "selfPermitIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "setTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeBips",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
    ],
    name: "sweepTokenWithFee",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeBips",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9WithFee",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040526000196000553480156200001757600080fd5b50604051620031f8380380620031f88339810160408190526200003a916200006f565b6001600160a01b039182166080521660a052620000a7565b80516001600160a01b03811681146200006a57600080fd5b919050565b600080604083850312156200008357600080fd5b6200008e8362000052565b91506200009e6020840162000052565b90509250929050565b60805160a0516130e5620001136000396000818161014a01528181610263015281816106b3015281816107d40152818161089f015281816109c001528181611d3701528181611d970152611e5f0152600081816103280152818161159a0152611f1601526130e56000f3fe60806040526004361061012d5760003560e01c8063c04b8d59116100a5578063df2ab5bb11610074578063f28c049811610059578063f28c049814610383578063f3995c6714610396578063fa461e33146103a957600080fd5b8063df2ab5bb1461035d578063e0e189a01461037057600080fd5b8063c04b8d59146102f0578063c2e3140a14610303578063c45a015514610316578063db3e21981461034a57600080fd5b806349404b7c116100fc5780639b2c0a37116100e15780639b2c0a37146102aa578063a4a78f0c146102bd578063ac9650d8146102d057600080fd5b806349404b7c1461023e5780634aa4a4fc1461025157600080fd5b806312210e8a146101dd5780633beb26c4146101e5578063414bf389146102055780634659a4941461022b57600080fd5b366101d8573373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f74205745544839000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b005b600080fd5b6101d66103c9565b3480156101f157600080fd5b506101d6610200366004612609565b600155565b610218610213366004612635565b6103db565b6040519081526020015b60405180910390f35b6101d661023936600461267e565b6105c7565b6101d661024c3660046126e0565b610682565b34801561025d57600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610222565b6101d66102b8366004612710565b610854565b6101d66102cb36600461267e565b610a7a565b6102e36102de36600461275a565b610b44565b6040516102229190612845565b6102186102fe366004612a08565b610cb6565b6101d661031136600461267e565b610e41565b34801561032257600080fd5b506102857f000000000000000000000000000000000000000000000000000000000000000081565b610218610358366004612635565b610eeb565b6101d661036b366004612aac565b6110fe565b6101d661037e366004612aee565b611212565b610218610391366004612b4d565b611378565b6101d66103a436600461267e565b6114d8565b3480156103b557600080fd5b506101d66103c4366004612b88565b611555565b47156103d9576103d9334761169c565b565b60008160800135806103ec60015490565b1115610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c640000000000000000000000000060448201526064016101cd565b61055160a084013561046c6080860160608701612c08565b61047d610100870160e08801612c08565b604080518082019091528061049560208a018a612c08565b6104a560608b0160408c01612c25565b6104b560408c0160208d01612c08565b604051606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116602083015260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166034820152921b166037820152604b0160405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff16815250611780565b91508260c001358210156105c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f546f6f206c6974746c652072656365697665640000000000000000000000000060448201526064016101cd565b50919050565b6040517f8fcbaf0c00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101869052606481018590526001608482015260ff841660a482015260c4810183905260e4810182905273ffffffffffffffffffffffffffffffffffffffff871690638fcbaf0c90610104015b600060405180830381600087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b50505050505050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190612c4a565b90508281101561079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e74205745544839000000000000000000000000000060448201526064016101cd565b801561084f576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b5050505061084f828261169c565b505050565b600082118015610865575060648211155b61086e57600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190612c4a565b90508481101561098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e74205745544839000000000000000000000000000060448201526064016101cd565b8015610a73576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b5050505060006127108483610a429190612c92565b610a4c9190612ccf565b90508015610a5e57610a5e838261169c565b610a7185610a6c8385612d0a565b61169c565b505b5050505050565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9073ffffffffffffffffffffffffffffffffffffffff88169063dd62ed3e90604401602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190612c4a565b1015610a7157610a718686868686866105c7565b60608167ffffffffffffffff811115610b5f57610b5f6128c5565b604051908082528060200260200182016040528015610b9257816020015b6060815260200190600190039081610b7d5790505b50905060005b82811015610caf5760008030868685818110610bb657610bb6612d21565b9050602002810190610bc89190612d50565b604051610bd6929190612dbc565b600060405180830381855af49150503d8060008114610c11576040519150601f19603f3d011682016040523d82523d6000602084013e610c16565b606091505b509150915081610c7c57604481511015610c2f57600080fd5b60048101905080806020019051810190610c499190612dcc565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd9190612e3a565b80848481518110610c8f57610c8f612d21565b602002602001018190525050508080610ca790612e4d565b915050610b98565b5092915050565b6000816040015180610cc760015490565b1115610d2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c640000000000000000000000000060448201526064016101cd565b335b6000610d408560000151611910565b9050610d99856060015182610d59578660200151610d5b565b305b60006040518060400160405280610d758b6000015161194a565b81526020018773ffffffffffffffffffffffffffffffffffffffff16815250611780565b60608601528015610db9578451309250610db290611976565b8552610dc6565b8460600151935050610dcc565b50610d31565b8360800151831015610e3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f546f6f206c6974746c652072656365697665640000000000000000000000000060448201526064016101cd565b5050919050565b6040517fdd62ed3e000000000000000000000000000000000000000000000000000000008152336004820152306024820152859073ffffffffffffffffffffffffffffffffffffffff88169063dd62ed3e90604401602060405180830381865afa158015610eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed79190612c4a565b1015610a7157610a718686868686866114d8565b6000816080013580610efc60015490565b1115610f64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c640000000000000000000000000060448201526064016101cd565b61106460a0840135610f7c6080860160608701612c08565b610f8d610100870160e08801612c08565b6040518060400160405280886020016020810190610fab9190612c08565b610fbb60608b0160408c01612c25565b610fc860208c018c612c08565b604051606093841b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116602083015260e89390931b7fffffff0000000000000000000000000000000000000000000000000000000000166034820152921b166037820152604b0160405160208183030381529060405281526020013373ffffffffffffffffffffffffffffffffffffffff1681525061199f565b91508260c001358211156110d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f546f6f206d75636820726571756573746564000000000000000000000000000060448201526064016101cd565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600055919050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f9190612c4a565b9050828110156111fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016101cd565b801561120c5761120c848383611b71565b50505050565b600082118015611223575060648211155b61122c57600080fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd9190612c4a565b905084811015611329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016101cd565b8015610a7157600061271061133e8584612c92565b6113489190612ccf565b9050801561135b5761135b878483611b71565b61136f878661136a8486612d0a565b611b71565b50505050505050565b600081604001358061138960015490565b11156113f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f5472616e73616374696f6e20746f6f206f6c640000000000000000000000000060448201526064016101cd565b61146460608401356114096040860160208701612c08565b60408051808201909152600090806114218980612d50565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360209091015261199f565b50600054915082608001358211156110d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f546f6f206d75636820726571756573746564000000000000000000000000000060448201526064016101cd565b6040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c4810182905273ffffffffffffffffffffffffffffffffffffffff87169063d505accf9060e401610648565b60008413806115645750600083135b61156d57600080fd5b600061157b82840184612e85565b9050600080600061158f8460000151611cda565b9250925092506115c17f0000000000000000000000000000000000000000000000000000000000000000848484611d16565b5060008060008a13611602578473ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161089611633565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16108a5b9150915081156116525761164d8587602001513384611d35565b610676565b855161165d90611910565b1561168257855161166d90611976565b865261167c813360008961199f565b50610676565b806000819055508394506106768587602001513384611d35565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff84169083906040516116d39190612f1f565b60006040518083038185875af1925050503d8060008114611710576040519150601f19603f3d011682016040523d82523d6000602084013e611715565b606091505b505090508061084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f535445000000000000000000000000000000000000000000000000000000000060448201526064016101cd565b600073ffffffffffffffffffffffffffffffffffffffff84166117a1573093505b60008060006117b38560000151611cda565b9194509250905073ffffffffffffffffffffffffffffffffffffffff808316908416106000806117e4868686611f0f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b8561180a8f611f4d565b73ffffffffffffffffffffffffffffffffffffffff8e161561182c578d611865565b8761185557611850600173fffd8963efd1fc6a506488495d951d5263988d26612f3b565b611865565b6118656401000276a36001612f70565b8d6040516020016118769190612fa8565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016118a5959493929190612ff0565b60408051808303816000875af11580156118c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e79190613042565b91509150826118f657816118f8565b805b61190190613066565b9b9a5050505050505050505050565b600061191e6003601461309e565b601461192b60038261309e565b611935919061309e565b61193f919061309e565b825110159050919050565b60606119706000601461195e60038261309e565b611968919061309e565b849190611f7f565b92915050565b60606119706119876003601461309e565b6119936003601461309e565b84516119689190612d0a565b600073ffffffffffffffffffffffffffffffffffffffff84166119c0573093505b60008060006119d28560000151611cda565b9194509250905073ffffffffffffffffffffffffffffffffffffffff80841690831610600080611a03858786611f0f565b73ffffffffffffffffffffffffffffffffffffffff1663128acb088b85611a298f611f4d565b611a3290613066565b73ffffffffffffffffffffffffffffffffffffffff8e1615611a54578d611a8d565b87611a7d57611a78600173fffd8963efd1fc6a506488495d951d5263988d26612f3b565b611a8d565b611a8d6401000276a36001612f70565b8d604051602001611a9e9190612fa8565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611acd959493929190612ff0565b60408051808303816000875af1158015611aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0f9190613042565b91509150600083611b295781611b2484613066565b611b33565b82611b3383613066565b909850905073ffffffffffffffffffffffffffffffffffffffff8a16600003611b62578b8114611b6257600080fd5b50505050505050949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611c089190612f1f565b6000604051808303816000865af19150503d8060008114611c45576040519150601f19603f3d011682016040523d82523d6000602084013e611c4a565b606091505b5091509150818015611c74575080511580611c74575080806020019051810190611c7491906130b6565b610a73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f535400000000000000000000000000000000000000000000000000000000000060448201526064016101cd565b60008080611ce884826120f9565b9250611cf5846014612189565b9050611d0d611d066003601461309e565b85906120f9565b91509193909250565b6000611d2c85611d2786868661227d565b61230f565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148015611d905750804710155b15611ed6577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b50506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed091906130b6565b5061120c565b3073ffffffffffffffffffffffffffffffffffffffff841603611f0357611efe848383611b71565b61120c565b61120c8484848461233f565b6000611f457f0000000000000000000000000000000000000000000000000000000000000000611f4086868661227d565b6124b0565b949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008210611f7b57600080fd5b5090565b606081611f8d81601f61309e565b1015611ff5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064016101cd565b611fff828461309e565b84511015612069576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016101cd565b60608215801561208857604051915060008252602082016040526120f0565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156120c15780518352602092830192016120a9565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b600061210682601461309e565b83511015612170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e6473000000000000000000000060448201526064016101cd565b5001602001516c01000000000000000000000000900490565b60008161219781600361309e565b10156121ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f746f55696e7432345f6f766572666c6f7700000000000000000000000000000060448201526064016101cd565b61220a82600361309e565b83511015612274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e647300000000000000000000000060448201526064016101cd565b50016003015190565b60408051606081018252600080825260208201819052918101919091528273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156122d2579192915b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff948516815292909316602083015262ffffff169181019190915290565b600061231b83836124b0565b90503373ffffffffffffffffffffffffffffffffffffffff82161461197057600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916123de9190612f1f565b6000604051808303816000865af19150503d806000811461241b576040519150601f19603f3d011682016040523d82523d6000602084013e612420565b606091505b509150915081801561244a57508051158061244a57508080602001905181019061244a91906130b6565b610a71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f535446000000000000000000000000000000000000000000000000000000000060448201526064016101cd565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16106124f257600080fd5b8151602080840151604080860151815173ffffffffffffffffffffffffffffffffffffffff95861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401529085901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201527fa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff60d582015260f501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60006020828403121561261b57600080fd5b5035919050565b600061010082840312156105c157600080fd5b6000610100828403121561264857600080fd5b6126528383612622565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461267b57600080fd5b50565b60008060008060008060c0878903121561269757600080fd5b86356126a281612659565b95506020870135945060408701359350606087013560ff811681146126c657600080fd5b9598949750929560808101359460a0909101359350915050565b600080604083850312156126f357600080fd5b82359150602083013561270581612659565b809150509250929050565b6000806000806080858703121561272657600080fd5b84359350602085013561273881612659565b925060408501359150606085013561274f81612659565b939692955090935050565b6000806020838503121561276d57600080fd5b823567ffffffffffffffff8082111561278557600080fd5b818501915085601f83011261279957600080fd5b8135818111156127a857600080fd5b8660208260051b85010111156127bd57600080fd5b60209290920196919550909350505050565b60005b838110156127ea5781810151838201526020016127d2565b8381111561120c5750506000910152565b600081518084526128138160208601602086016127cf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156128b8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526128a68583516127fb565b9450928501929085019060010161286c565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612917576129176128c5565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612964576129646128c5565b604052919050565b600067ffffffffffffffff821115612986576129866128c5565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126129c357600080fd5b81356129d66129d18261296c565b61291d565b8181528460208386010111156129eb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612a1a57600080fd5b813567ffffffffffffffff80821115612a3257600080fd5b9083019060a08286031215612a4657600080fd5b612a4e6128f4565b823582811115612a5d57600080fd5b612a69878286016129b2565b82525060208301359150612a7c82612659565b81602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b600080600060608486031215612ac157600080fd5b8335612acc81612659565b9250602084013591506040840135612ae381612659565b809150509250925092565b600080600080600060a08688031215612b0657600080fd5b8535612b1181612659565b9450602086013593506040860135612b2881612659565b9250606086013591506080860135612b3f81612659565b809150509295509295909350565b600060208284031215612b5f57600080fd5b813567ffffffffffffffff811115612b7657600080fd5b820160a0818503121561265257600080fd5b60008060008060608587031215612b9e57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115612bc457600080fd5b818701915087601f830112612bd857600080fd5b813581811115612be757600080fd5b886020828501011115612bf957600080fd5b95989497505060200194505050565b600060208284031215612c1a57600080fd5b813561265281612659565b600060208284031215612c3757600080fd5b813562ffffff8116811461265257600080fd5b600060208284031215612c5c57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612cca57612cca612c63565b500290565b600082612d05577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600082821015612d1c57612d1c612c63565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612d8557600080fd5b83018035915067ffffffffffffffff821115612da057600080fd5b602001915036819003821315612db557600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612dde57600080fd5b815167ffffffffffffffff811115612df557600080fd5b8201601f81018413612e0657600080fd5b8051612e146129d18261296c565b818152856020838501011115612e2957600080fd5b611d2c8260208301602086016127cf565b60208152600061265260208301846127fb565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e7e57612e7e612c63565b5060010190565b600060208284031215612e9757600080fd5b813567ffffffffffffffff80821115612eaf57600080fd5b9083019060408286031215612ec357600080fd5b604051604081018181108382111715612ede57612ede6128c5565b604052823582811115612ef057600080fd5b612efc878286016129b2565b82525060208301359250612f0f83612659565b6020810192909252509392505050565b60008251612f318184602087016127cf565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff83811690831681811015612f6857612f68612c63565b039392505050565b600073ffffffffffffffffffffffffffffffffffffffff808316818516808303821115612f9f57612f9f612c63565b01949350505050565b602081526000825160406020840152612fc460608401826127fb565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401528091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff8088168352861515602084015285604084015280851660608401525060a0608083015261303760a08301846127fb565b979650505050505050565b6000806040838503121561305557600080fd5b505080516020909101519092909150565b60007f8000000000000000000000000000000000000000000000000000000000000000820361309757613097612c63565b5060000390565b600082198211156130b1576130b1612c63565b500190565b6000602082840312156130c857600080fd5b8151801515811461265257600080fdfea164736f6c634300080f000a";

type MockTimeSwapRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTimeSwapRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTimeSwapRouter__factory extends ContractFactory {
  constructor(...args: MockTimeSwapRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _WETH9: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_factory, _WETH9, overrides || {});
  }
  override deploy(
    _factory: AddressLike,
    _WETH9: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_factory, _WETH9, overrides || {}) as Promise<
      MockTimeSwapRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockTimeSwapRouter__factory {
    return super.connect(runner) as MockTimeSwapRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTimeSwapRouterInterface {
    return new Interface(_abi) as MockTimeSwapRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockTimeSwapRouter {
    return new Contract(address, _abi, runner) as unknown as MockTimeSwapRouter;
  }
}
