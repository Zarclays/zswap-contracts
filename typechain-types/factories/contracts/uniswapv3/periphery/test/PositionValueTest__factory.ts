/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  PositionValueTest,
  PositionValueTestInterface,
} from "../../../../../contracts/uniswapv3/periphery/test/PositionValueTest";

const _abi = [
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "feesGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioX96",
        type: "uint160",
      },
    ],
    name: "principal",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioX96",
        type: "uint160",
      },
    ],
    name: "principalGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioX96",
        type: "uint160",
      },
    ],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioX96",
        type: "uint160",
      },
    ],
    name: "totalGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061147a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80635b6dc092116100505780635b6dc092146100d857806390594f91146100eb578063ee4e9ba3146100fe57600080fd5b80632263539714610077578063263a5362146100a45780633803770c146100b7575b600080fd5b61008a6100853660046110aa565b610111565b604080519283526020830191909152015b60405180910390f35b61008a6100b23660046110ec565b61012b565b6100ca6100c53660046110ec565b610143565b60405190815260200161009b565b61008a6100e63660046110aa565b610168565b6100ca6100f93660046110aa565b610176565b6100ca61010c3660046110aa565b61019f565b60008061011f8585856101ac565b91509150935093915050565b600080610138848461026b565b915091509250929050565b6000805a9050610153848461026b565b50505a6101609082611147565b949350505050565b60008061011f8585856103e1565b6000805a90506101878585856103e1565b50505a6101949082611147565b9150505b9392505050565b6000805a90506101878585855b60008060008060008773ffffffffffffffffffffffffffffffffffffffff166399fbab88886040518263ffffffff1660e01b81526004016101ef91815260200190565b61018060405180830381865afa15801561020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023191906111b3565b50505050975097509750505050505061025c8661024d8561042c565b6102568561042c565b84610793565b94509450505050935093915050565b6000806000806000806000806000806000808d73ffffffffffffffffffffffffffffffffffffffff166399fbab888e6040518263ffffffff1660e01b81526004016102b891815260200190565b61018060405180830381865afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa91906111b3565b6fffffffffffffffffffffffffffffffff169b506fffffffffffffffffffffffffffffffff169b509b509b509b509b509b509b509b509b5050506103cc8e6040518061014001604052808d73ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b62ffffff1681526020018a60020b81526020018960020b8152602001886fffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481525061087d565b9b509b50505050505050505050509250929050565b6000806000806103f28787876101ac565b91509150600080610403898961026b565b90925090506104128285611294565b61041c8285611294565b9550955050505050935093915050565b60008060008360020b12610443578260020b61044b565b8260020b6000035b9050620d89e881111561048a576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816001166000036104ae577001000000000000000000000000000000006104c0565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156104f4576ffff97272373d413259a46990580e213a0260801c5b6004821615610513576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610532576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610551576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610570576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561058f576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156105ae576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156105ce576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156105ee576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561060e576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561062e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561064e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561066e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561068e576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156106ae576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156106cf576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156106ef576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561070e576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561072b576b048a170391f7dc42444e8fa20260801c5b60008460020b131561076a57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610766576107666112ac565b0490505b64010000000081061561077e576001610781565b60005b60ff16602082901c0192505050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1611156107ce579293925b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16116108135761080c8585856109e9565b9150610874565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161015610866576108528685856109e9565b915061085f858785610aa2565b9050610874565b610871858585610aa2565b90505b94509492505050565b6000806000806109646109558773ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f891906112db565b6040518060600160405280896000015173ffffffffffffffffffffffffffffffffffffffff168152602001896020015173ffffffffffffffffffffffffffffffffffffffff168152602001896040015162ffffff16815250610b1e565b86606001518760800151610c77565b915091508461010001516109af8660c00151846109819190611147565b8760a001516fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610fb5565b6109b99190611294565b93508461012001516109d48660e00151836109819190611147565b6109de9190611294565b925050509250929050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610a23579192915b8373ffffffffffffffffffffffffffffffffffffffff16610a8c606060ff16846fffffffffffffffffffffffffffffffff16901b86860373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16610fb5565b81610a9957610a996112ac565b04949350505050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610adc579192915b610160826fffffffffffffffffffffffffffffffff1685850373ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000610fb5565b6000816020015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1610610b6057600080fd5b8151602080840151604080860151815173ffffffffffffffffffffffffffffffffffffffff95861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401529085901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660a183015260b58201527fa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff60d582015260f501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ceb919061131a565b50506040517ff30dba9300000000000000000000000000000000000000000000000000000000815260028b900b600482015293955060009450849373ffffffffffffffffffffffffffffffffffffffff8c16935063f30dba939250602401905061010060405180830381865afa158015610d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d91906113aa565b50506040517ff30dba9300000000000000000000000000000000000000000000000000000000815260028d900b6004820152939750919550600094508493505073ffffffffffffffffffffffffffffffffffffffff8c169163f30dba93915060240161010060405180830381865afa158015610e0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3191906113aa565b505050509350935050508860020b8560020b1215610e6657610e538285611147565b9650610e5f8184611147565b9550610fa8565b8760020b8560020b1215610f8f5760008a73ffffffffffffffffffffffffffffffffffffffff1663f30583996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190611454565b905060008b73ffffffffffffffffffffffffffffffffffffffff1663461413196040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f589190611454565b905083610f658784611147565b610f6f9190611147565b985082610f7c8683611147565b610f869190611147565b97505050610fa8565b610f998483611147565b9650610fa58382611147565b95505b5050505050935093915050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8587098587029250828110838203039150508060000361100c576000841161100157600080fd5b508290049050610198565b80841161101857600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146110a757600080fd5b50565b6000806000606084860312156110bf57600080fd5b83356110ca81611085565b92506020840135915060408401356110e181611085565b809150509250925092565b600080604083850312156110ff57600080fd5b823561110a81611085565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561115957611159611118565b500390565b805161116981611085565b919050565b805162ffffff8116811461116957600080fd5b8051600281900b811461116957600080fd5b80516fffffffffffffffffffffffffffffffff8116811461116957600080fd5b6000806000806000806000806000806000806101808d8f0312156111d657600080fd5b8c516bffffffffffffffffffffffff811681146111f257600080fd5b9b5061120060208e0161115e565b9a5061120e60408e0161115e565b995061121c60608e0161115e565b985061122a60808e0161116e565b975061123860a08e01611181565b965061124660c08e01611181565b955061125460e08e01611193565b94506101008d015193506101208d015192506112736101408e01611193565b91506112826101608e01611193565b90509295989b509295989b509295989b565b600082198211156112a7576112a7611118565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000602082840312156112ed57600080fd5b815161019881611085565b805161ffff8116811461116957600080fd5b8051801515811461116957600080fd5b600080600080600080600060e0888a03121561133557600080fd5b875161134081611085565b965061134e60208901611181565b955061135c604089016112f8565b945061136a606089016112f8565b9350611378608089016112f8565b925060a088015160ff8116811461138e57600080fd5b915061139c60c0890161130a565b905092959891949750929550565b600080600080600080600080610100898b0312156113c757600080fd5b6113d089611193565b9750602089015180600f0b81146113e657600080fd5b80975050604089015195506060890151945060808901518060060b811461140c57600080fd5b60a08a015190945061141d81611085565b60c08a015190935063ffffffff8116811461143757600080fd5b915061144560e08a0161130a565b90509295985092959890939650565b60006020828403121561146657600080fd5b505191905056fea164736f6c634300080f000a";

type PositionValueTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionValueTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PositionValueTest__factory extends ContractFactory {
  constructor(...args: PositionValueTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PositionValueTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PositionValueTest__factory {
    return super.connect(runner) as PositionValueTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionValueTestInterface {
    return new Interface(_abi) as PositionValueTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PositionValueTest {
    return new Contract(address, _abi, runner) as unknown as PositionValueTest;
  }
}
