/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestUniswapV3SwapPay,
  TestUniswapV3SwapPayInterface,
} from "../../../../../contracts/uniswapv3/core/test/TestUniswapV3SwapPay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "pay0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pay1",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061053f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063f13cdf901461003b578063fa461e3314610050575b600080fd5b61004e61004936600461031f565b610063565b005b61004e61005e366004610396565b61010b565b604080513360208201528082018490526060808201849052825180830390910181526080820192839052630251596160e31b9092526001600160a01b0389169163128acb08916100be918a918a9189918b9190608401610416565b60408051808303816000875af11580156100dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101009190610498565b505050505050505050565b6000808061011b848601866104bc565b91945092509050811561020b57336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a91906104f1565b6040516323b872dd60e01b81526001600160a01b0385811660048301523360248301526044820185905291909116906323b872dd906064016020604051808303816000875af11580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102059190610515565b506102f0565b80156102f057336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027391906104f1565b6040516323b872dd60e01b81526001600160a01b0385811660048301523360248301526044820184905291909116906323b872dd906064016020604051808303816000875af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610515565b505b50505050505050565b6001600160a01b038116811461030e57600080fd5b50565b801515811461030e57600080fd5b600080600080600080600060e0888a03121561033a57600080fd5b8735610345816102f9565b96506020880135610355816102f9565b9550604088013561036581610311565b94506060880135610375816102f9565b9699959850939660808101359560a0820135955060c0909101359350915050565b600080600080606085870312156103ac57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156103d257600080fd5b818701915087601f8301126103e657600080fd5b8135818111156103f557600080fd5b88602082850101111561040757600080fd5b95989497505060200194505050565b60006001600160a01b038088168352602087151581850152866040850152818616606085015260a06080850152845191508160a085015260005b8281101561046c5785810182015185820160c001528101610450565b8281111561047e57600060c084870101525b5050601f01601f19169190910160c0019695505050505050565b600080604083850312156104ab57600080fd5b505080516020909101519092909150565b6000806000606084860312156104d157600080fd5b83356104dc816102f9565b95602085013595506040909401359392505050565b60006020828403121561050357600080fd5b815161050e816102f9565b9392505050565b60006020828403121561052757600080fd5b815161050e8161031156fea164736f6c634300080c000a";

type TestUniswapV3SwapPayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3SwapPayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3SwapPay__factory extends ContractFactory {
  constructor(...args: TestUniswapV3SwapPayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniswapV3SwapPay & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniswapV3SwapPay__factory {
    return super.connect(runner) as TestUniswapV3SwapPay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3SwapPayInterface {
    return new Interface(_abi) as TestUniswapV3SwapPayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapV3SwapPay {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniswapV3SwapPay;
  }
}
