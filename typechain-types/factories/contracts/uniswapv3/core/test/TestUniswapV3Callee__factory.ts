/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestUniswapV3Callee,
  TestUniswapV3CalleeInterface,
} from "../../../../../contracts/uniswapv3/core/test/TestUniswapV3Callee";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "FlashCallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
    ],
    name: "MintCallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
    ],
    name: "SwapCallback",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pay0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pay1",
        type: "uint256",
      },
    ],
    name: "flash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "swap0ForExact1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "swap1ForExact0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "swapExact0For1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "swapExact1For0",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swapToHigherSqrtPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "swapToLowerSqrtPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3FlashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063bac7bf7811610081578063e9cbafb01161005b578063e9cbafb014610168578063f603482c1461017b578063fa461e331461018e57600080fd5b8063bac7bf781461012f578063d348799714610142578063e2be91091461015557600080fd5b80636dfc0ddb116100b25780636dfc0ddb146100f65780637b4f5327146101095780639e77b8051461011c57600080fd5b8063034b0f8f146100ce5780632ec20bf9146100e3575b600080fd5b6100e16100dc366004610af8565b6101a1565b005b6100e16100f1366004610b51565b610233565b6100e1610104366004610b9c565b6102d8565b6100e1610117366004610c06565b610379565b6100e161012a366004610b51565b610414565b6100e161013d366004610b9c565b610445565b6100e1610150366004610cd1565b610469565b6100e1610163366004610b9c565b61067b565b6100e1610176366004610cd1565b610696565b6100e1610189366004610b9c565b6108b8565b6100e161019c366004610cd1565b6108d3565b6040805133602082015280820184905260608082018490528251808303909101815260808201928390526312439b2f60e21b9092526001600160a01b0388169163490e6cbc916101f991899189918991608401610d71565b600060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b50505050505050505050565b604080513360208201526001600160a01b0385169163128acb089184916001916001600160ff1b03918891015b6040516020818303038152906040526040518663ffffffff1660e01b815260040161028f959493929190610da9565b60408051808303816000875af11580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610dee565b5050505050565b836001600160a01b031663128acb088360016102f387610aca565b604080513360208201528791016040516020818303038152906040526040518663ffffffff1660e01b815260040161032f959493929190610da9565b60408051808303816000875af115801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190610dee565b505050505050565b60408051336020808301919091528251808303909101815281830192839052633c8a7d8d60e01b9092526001600160a01b03871691633c8a7d8d916103c991889188918891889190604401610e12565b60408051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610dee565b50505050505050565b604080513360208201526001600160a01b0385169163128acb089184916000916001600160ff1b0391889101610260565b836001600160a01b031663128acb0883600161046087610aca565b6102f390610e5e565b600061047782840184610e89565b60408051878152602081018790529192507fa0968be00566083701c9ef671c169d7fb05ac8907de4ca17185de74ccbb694d4910160405180910390a1841561059857336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610ead565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820188905291909116906323b872dd906064016020604051808303816000875af1158015610572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105969190610eca565b505b83156102d157336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610ead565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820187905291909116906323b872dd906064016020604051808303816000875af1158015610657573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190610eca565b836001600160a01b031663128acb088360006102f387610aca565b60408051858152602081018590527f2b0391b4fa408cfe47abd1977d72985695b2e5ebd3175f55be25f2c68c5df21b910160405180910390a1600080806106df84860186610eec565b9194509250905081156107cb57336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190610ead565b6040516323b872dd60e01b81526001600160a01b0385811660048301523360248301526044820185905291909116906323b872dd906064016020604051808303816000875af11580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190610eca565b505b801561040b57336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190610ead565b6040516323b872dd60e01b81526001600160a01b0385811660048301523360248301526044820184905291909116906323b872dd906064016020604051808303816000875af115801561088a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ae9190610eca565b5050505050505050565b836001600160a01b031663128acb0883600061046087610aca565b60006108e182840184610e89565b60408051878152602081018790529192507fd48241df4a75e663b29e55f9506b31f77ed0f48cfe7e7612d1163144995dc1ca910160405180910390a16000851315610a0a57336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190610ead565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820188905291909116906323b872dd906064015b6020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190610eca565b506102d1565b6000841315610ab257336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a759190610ead565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820187905291909116906323b872dd906064016109c1565b84158015610abe575083155b6102d1576102d1610f21565b6000600160ff1b8210610adc57600080fd5b5090565b6001600160a01b0381168114610af557600080fd5b50565b60008060008060008060c08789031215610b1157600080fd5b8635610b1c81610ae0565b95506020870135610b2c81610ae0565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600060608486031215610b6657600080fd5b8335610b7181610ae0565b92506020840135610b8181610ae0565b91506040840135610b9181610ae0565b809150509250925092565b60008060008060808587031215610bb257600080fd5b8435610bbd81610ae0565b9350602085013592506040850135610bd481610ae0565b91506060850135610be481610ae0565b939692955090935050565b8035600281900b8114610c0157600080fd5b919050565b600080600080600060a08688031215610c1e57600080fd5b8535610c2981610ae0565b94506020860135610c3981610ae0565b9350610c4760408701610bef565b9250610c5560608701610bef565b915060808601356fffffffffffffffffffffffffffffffff81168114610c7a57600080fd5b809150509295509295909350565b60008083601f840112610c9a57600080fd5b50813567ffffffffffffffff811115610cb257600080fd5b602083019150836020828501011115610cca57600080fd5b9250929050565b60008060008060608587031215610ce757600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d0c57600080fd5b610d1887828801610c88565b95989497509550505050565b6000815180845260005b81811015610d4a57602081850181015186830182015201610d2e565b81811115610d5c576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0385168152836020820152826040820152608060608201526000610d9f6080830184610d24565b9695505050505050565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a06080830152610de360a0830184610d24565b979650505050505050565b60008060408385031215610e0157600080fd5b505080516020909101519092909150565b6001600160a01b03861681528460020b60208201528360020b60408201526fffffffffffffffffffffffffffffffff8316606082015260a060808201526000610de360a0830184610d24565b6000600160ff1b821415610e8257634e487b7160e01b600052601160045260246000fd5b5060000390565b600060208284031215610e9b57600080fd5b8135610ea681610ae0565b9392505050565b600060208284031215610ebf57600080fd5b8151610ea681610ae0565b600060208284031215610edc57600080fd5b81518015158114610ea657600080fd5b600080600060608486031215610f0157600080fd5b8335610f0c81610ae0565b95602085013595506040909401359392505050565b634e487b7160e01b600052600160045260246000fdfea164736f6c634300080c000a";

type TestUniswapV3CalleeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3CalleeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3Callee__factory extends ContractFactory {
  constructor(...args: TestUniswapV3CalleeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniswapV3Callee & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniswapV3Callee__factory {
    return super.connect(runner) as TestUniswapV3Callee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3CalleeInterface {
    return new Interface(_abi) as TestUniswapV3CalleeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapV3Callee {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniswapV3Callee;
  }
}
