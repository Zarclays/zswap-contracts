/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestUniswapV3ReentrantCallee,
  TestUniswapV3ReentrantCalleeInterface,
} from "../../../../../contracts/uniswapv3/core/test/TestUniswapV3ReentrantCallee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "swapToReenter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ac1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c22a2bfe1461003b578063fa461e3314610050575b600080fd5b61004e610049366004610815565b610063565b005b61004e61005e366004610845565b61010f565b6001600160a01b03811663128acb0860008060016100958173fffd8963efd1fc6a506488495d951d5263988d266108c5565b604080516000815260208101918290526001600160e01b031960e088901b169091526100c8949392919060248101610953565b60408051808303816000875af11580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a9190610998565b505050565b6040805160008082526020820192839052630251596160e31b909252339163128acb089161014891908190600190829060248101610953565b60408051808303816000875af1925050508015610182575060408051601f3d908101601f1916820190925261017f91810190610998565b60015b610232573d8080156101b0576040519150601f19603f3d011682016040523d82523d6000602084013e6101b5565b606091505b5060408051808201825260058152644c4f4b282960d81b60208201528151600481526024810192839052916101ea91906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b0319909316929092178252915190208251918301919091201461022c57600080fd5b50610235565b50505b6040805160008082526020820192839052633c8a7d8d60e01b9092523391633c8a7d8d9161026d9190819081908190602481016109d8565b60408051808303816000875af19250505080156102a7575060408051601f3d908101601f191682019092526102a491810190610998565b60015b610357573d8080156102d5576040519150601f19603f3d011682016040523d82523d6000602084013e6102da565b606091505b5060408051808201825260058152644c4f4b282960d81b602082015281516004815260248101928390529161030f91906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b0319909316929092178252915190208251918301919091201461035157600080fd5b5061035a565b50505b6040516309e3d67b60e31b815260006004820181905260248201819052604482018190526064820181905260848201523390634f1eb3d89060a40160408051808303816000875af19250505080156103cf575060408051601f3d908101601f191682019092526103cc91810190610a49565b60015b61047f573d8080156103fd576040519150601f19603f3d011682016040523d82523d6000602084013e610402565b606091505b5060408051808201825260058152644c4f4b282960d81b602082015281516004815260248101928390529161043791906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b0319909316929092178252915190208251918301919091201461047957600080fd5b50610482565b50505b60405163a34123a760e01b8152600060048201819052602482018190526044820152339063a34123a79060640160408051808303816000875af19250505080156104e9575060408051601f3d908101601f191682019092526104e691810190610998565b60015b610599573d808015610517576040519150601f19603f3d011682016040523d82523d6000602084013e61051c565b606091505b5060408051808201825260058152644c4f4b282960d81b602082015281516004815260248101928390529161055191906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b0319909316929092178252915190208251918301919091201461059357600080fd5b5061059c565b50505b60408051600080825260208201928390526312439b2f60e21b909252339163490e6cbc916105d291908190819060248101610a7c565b600060405180830381600087803b1580156105ec57600080fd5b505af19250505080156105fd575060015b6106a9573d80801561062b576040519150601f19603f3d011682016040523d82523d6000602084013e610630565b606091505b5060408051808201825260058152644c4f4b282960d81b602082015281516004815260248101928390529161066591906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b031990931692909217825291519020825191830191909120146106a757600080fd5b505b6040516385b6672960e01b815260006004820181905260248201819052604482015233906385b667299060640160408051808303816000875af1925050508015610710575060408051601f3d908101601f1916820190925261070d91810190610a49565b60015b6107c0573d80801561073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b5060408051808201825260058152644c4f4b282960d81b602082015281516004815260248101928390529161077891906109bc565b604051908190039020602082810180516001600160e01b03166001600160e01b031990931692909217825291519020825191830191909120146107ba57600080fd5b506107c3565b50505b60405162461bcd60e51b815260206004820152601160248201527f556e61626c6520746f207265656e746572000000000000000000000000000000604482015260640160405180910390fd5b50505050565b60006020828403121561082757600080fd5b81356001600160a01b038116811461083e57600080fd5b9392505050565b6000806000806060858703121561085b57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561088157600080fd5b818701915087601f83011261089557600080fd5b8135818111156108a457600080fd5b8860208285010111156108b657600080fd5b95989497505060200194505050565b60006001600160a01b03838116908316818110156108f357634e487b7160e01b600052601160045260246000fd5b039392505050565b60005b838110156109165781810151838201526020016108fe565b8381111561080f5750506000910152565b6000815180845261093f8160208601602086016108fb565b601f01601f19169290920160200192915050565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a0608083015261098d60a0830184610927565b979650505050505050565b600080604083850312156109ab57600080fd5b505080516020909101519092909150565b600082516109ce8184602087016108fb565b9190910192915050565b6001600160a01b03861681528460020b60208201528360020b60408201526fffffffffffffffffffffffffffffffff8316606082015260a06080820152600061098d60a0830184610927565b80516fffffffffffffffffffffffffffffffff81168114610a4457600080fd5b919050565b60008060408385031215610a5c57600080fd5b610a6583610a24565b9150610a7360208401610a24565b90509250929050565b6001600160a01b0385168152836020820152826040820152608060608201526000610aaa6080830184610927565b969550505050505056fea164736f6c634300080c000a";

type TestUniswapV3ReentrantCalleeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3ReentrantCalleeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3ReentrantCallee__factory extends ContractFactory {
  constructor(...args: TestUniswapV3ReentrantCalleeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniswapV3ReentrantCallee & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniswapV3ReentrantCallee__factory {
    return super.connect(runner) as TestUniswapV3ReentrantCallee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3ReentrantCalleeInterface {
    return new Interface(_abi) as TestUniswapV3ReentrantCalleeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapV3ReentrantCallee {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniswapV3ReentrantCallee;
  }
}
