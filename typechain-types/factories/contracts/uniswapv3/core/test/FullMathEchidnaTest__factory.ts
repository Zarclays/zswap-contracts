/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  FullMathEchidnaTest,
  FullMathEchidnaTestInterface,
} from "../../../../../contracts/uniswapv3/core/test/FullMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    name: "checkMulDiv",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    name: "checkMulDivRounding",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    name: "checkMulDivRoundingUp",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061038d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063695363a31461004657806379eee4871461005b578063bf08c3911461006e575b600080fd5b610059610054366004610328565b610081565b005b610059610069366004610328565b6100f2565b61005961007c366004610328565b61019a565b6000811161008e57600080fd5b600061009b848484610234565b905060006100aa858585610275565b9050600083806100bc576100bc610354565b85870911156100dc578082036001146100d7576100d761036a565b6100eb565b8082146100eb576100eb61036a565b5050505050565b600081116100ff57600080fd5b600061010c848484610234565b9050831580610119575082155b1561013257801561012c5761012c61036a565b50505050565b600061013f828486610275565b9050600061014e838588610275565b9050858210156101605761016061036a565b848110156101705761017061036a565b83868303106101815761018161036a565b83858203106101925761019261036a565b505050505050565b600081116101a757600080fd5b60006101b4848484610275565b90508315806101c1575082155b156101d457801561012c5761012c61036a565b60006101e1828486610275565b905060006101f0838588610275565b9050858211156102025761020261036a565b848111156102125761021261036a565b83828703106102235761022361036a565b83818603106101925761019261036a565b6000610241848484610275565b90506000828061025357610253610354565b848609111561026e57600019811061026a57600080fd5b6001015b9392505050565b6000808060001985870985870292508281108382030391505080600014156102af57600084116102a457600080fd5b50829004905061026e565b8084116102bb57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60008060006060848603121561033d57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052600160045260246000fdfea164736f6c634300080c000a";

type FullMathEchidnaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FullMathEchidnaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FullMathEchidnaTest__factory extends ContractFactory {
  constructor(...args: FullMathEchidnaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FullMathEchidnaTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): FullMathEchidnaTest__factory {
    return super.connect(runner) as FullMathEchidnaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FullMathEchidnaTestInterface {
    return new Interface(_abi) as FullMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FullMathEchidnaTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as FullMathEchidnaTest;
  }
}
