/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  SwapMathTest,
  SwapMathTestInterface,
} from "../../../../../contracts/uniswapv3/core/test/SwapMathTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtPTarget",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "amountRemaining",
        type: "int256",
      },
      {
        internalType: "uint24",
        name: "feePips",
        type: "uint24",
      },
    ],
    name: "computeSwapStep",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtQ",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtP",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtPTarget",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "amountRemaining",
        type: "int256",
      },
      {
        internalType: "uint24",
        name: "feePips",
        type: "uint24",
      },
    ],
    name: "getGasCostOfComputeSwapStep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063100d3f741461003b578063d28c51b71461007d575b600080fd5b61004e6100493660046107c0565b61009e565b604080516001600160a01b03909516855260208501939093529183015260608201526080015b60405180910390f35b61009061008b3660046107c0565b6100c4565b604051908152602001610074565b6000806000806100b189898989896100f1565b929c919b50995090975095505050505050565b6000805a90506100d787878787876100f1565b505050505a6100e6908261084e565b979650505050505050565b60008080806001600160a01b03808916908a16101581871280159061017657600061012a8989620f42400362ffffff16620f42406102e3565b9050826101435761013e8c8c8c6001610397565b610150565b6101508b8d8c6001610412565b9550858110610161578a9650610170565b61016d8c8b83866104d0565b96505b506101c0565b8161018d576101888b8b8b6000610412565b61019a565b61019a8a8c8b6000610397565b93508388600003106101ae578995506101c0565b6101bd8b8a8a6000038561051c565b95505b6001600160a01b038a8116908716148215610223578080156101df5750815b6101f5576101f0878d8c6001610412565b6101f7565b855b9550808015610204575081155b61021a57610215878d8c6000610397565b61021c565b845b945061026d565b80801561022d5750815b6102435761023e8c888c6001610397565b610245565b855b9550808015610252575081155b610268576102638c888c6000610412565b61026a565b845b94505b8115801561027d57508860000385115b15610289578860000394505b8180156102a857508a6001600160a01b0316876001600160a01b031614155b156102b75785890393506102d4565b6102d1868962ffffff168a620f42400362ffffff16610568565b93505b50505095509550955095915050565b60008080600019858709858702925082811083820303915050806000141561031d576000841161031257600080fd5b508290049050610390565b80841161032957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000836001600160a01b0316856001600160a01b031611156103b7579293925b816103e4576103df836001600160801b03168686036001600160a01b0316600160601b6102e3565b610407565b610407836001600160801b03168686036001600160a01b0316600160601b610568565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115610432579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b03868603811690871661046e57600080fd5b836104a457866001600160a01b03166104918383896001600160a01b03166102e3565b8161049e5761049e610865565b046100e6565b6100e66104bb8383896001600160a01b0316610568565b886001600160a01b0316808204910615150190565b600080856001600160a01b0316116104e757600080fd5b6000846001600160801b0316116104fd57600080fd5b8161050f576103df85858560016105a8565b610407858585600161068e565b600080856001600160a01b03161161053357600080fd5b6000846001600160801b03161161054957600080fd5b8161055b576103df858585600061068e565b61040785858560006105a8565b60006105758484846102e3565b90506000828061058757610587610865565b848609111561039057600019811061059e57600080fd5b6001019392505050565b6000811561061a5760006001600160a01b038411156105de576105d984600160601b876001600160801b03166102e3565b6105f5565b6105f56001600160801b038616606086901b61087b565b905061061261060d826001600160a01b03891661089d565b61078e565b91505061040a565b60006001600160a01b038411156106485761064384600160601b876001600160801b0316610568565b610665565b610665606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161067c57600080fd5b6001600160a01b03861603905061040a565b60008261069c57508361040a565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b168215610741576001600160a01b038616848102908582816106e2576106e2610865565b041415610713578181018281106107115761070783896001600160a01b031683610568565b935050505061040a565b505b50610612818561072c6001600160a01b038a168361087b565b610736919061089d565b808204910615150190565b6001600160a01b0386168481029085828161075e5761075e610865565b0414801561076b57508082115b61077457600080fd5b80820361070761060d846001600160a01b038b1684610568565b806001600160a01b03811681146107a457600080fd5b919050565b80356001600160a01b03811681146107a457600080fd5b600080600080600060a086880312156107d857600080fd5b6107e1866107a9565b94506107ef602087016107a9565b935060408601356001600160801b038116811461080b57600080fd5b925060608601359150608086013562ffffff8116811461082a57600080fd5b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60008282101561086057610860610838565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261089857634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156108b0576108b0610838565b50019056fea164736f6c634300080c000a";

type SwapMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapMathTest__factory extends ContractFactory {
  constructor(...args: SwapMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapMathTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapMathTest__factory {
    return super.connect(runner) as SwapMathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapMathTestInterface {
    return new Interface(_abi) as SwapMathTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapMathTest {
    return new Contract(address, _abi, runner) as unknown as SwapMathTest;
  }
}
