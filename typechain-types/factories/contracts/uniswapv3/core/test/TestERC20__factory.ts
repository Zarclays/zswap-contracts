/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TestERC20,
  TestERC20Interface,
} from "../../../../../contracts/uniswapv3/core/test/TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107bc3803806107bc83398101604081905261002f916100cc565b610039338261003f565b5061010b565b6001600160a01b0382166000908152602081905260408120546100639083906100e5565b9050818110156100ac5760405162461bcd60e51b815260206004820152601060248201526f6f766572666c6f772062616c616e636560801b604482015260640160405180910390fd5b6001600160a01b0390921660009081526020819052604090209190915550565b6000602082840312156100de57600080fd5b5051919050565b6000821982111561010657634e487b7160e01b600052601160045260246000fd5b500190565b6106a28061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806370a082311161005057806370a08231146100c7578063a9059cbb146100f5578063dd62ed3e1461010857600080fd5b8063095ea7b31461007757806323b872dd1461009f57806340c10f19146100b2575b600080fd5b61008a610085366004610595565b610133565b60405190151581526020015b60405180910390f35b61008a6100ad3660046105bf565b61019f565b6100c56100c0366004610595565b610398565b005b6100e76100d53660046105fb565b60006020819052908152604090205481565b604051908152602001610096565b61008a610103366004610595565b61042e565b6100e761011636600461061d565b600160209081526000928352604080842090915290825290205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061018e9086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156102185760405162461bcd60e51b815260206004820152601660248201527f616c6c6f77616e636520696e73756666696369656e740000000000000000000060448201526064015b60405180910390fd5b6102228382610666565b6001600160a01b038087166000908152600160209081526040808320338452825280832094909455918716815290819052205480610260858261067d565b10156102ae5760405162461bcd60e51b815260206004820152601a60248201527f6f766572666c6f772062616c616e636520726563697069656e74000000000000604482015260640161020f565b6102b8848261067d565b6001600160a01b0380871660009081526020819052604080822093909355908816815220548481101561032d5760405162461bcd60e51b815260206004820152601860248201527f756e646572666c6f772062616c616e63652073656e6465720000000000000000604482015260640161020f565b6103378582610666565b6001600160a01b038881166000818152602081815260409182902094909455518881529189169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019695505050505050565b6001600160a01b0382166000908152602081905260408120546103bc90839061067d565b90508181101561040e5760405162461bcd60e51b815260206004820152601060248201527f6f766572666c6f772062616c616e636500000000000000000000000000000000604482015260640161020f565b6001600160a01b0390921660009081526020819052604090209190915550565b336000908152602081905260408120548281101561048e5760405162461bcd60e51b815260206004820152601460248201527f696e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161020f565b6104988382610666565b33600090815260208190526040808220929092556001600160a01b03861681522054806104c5858261067d565b10156105135760405162461bcd60e51b815260206004820152601a60248201527f726563697069656e742062616c616e6365206f766572666c6f77000000000000604482015260640161020f565b61051d848261067d565b6001600160a01b038616600081815260208181526040918290209390935551868152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b80356001600160a01b038116811461059057600080fd5b919050565b600080604083850312156105a857600080fd5b6105b183610579565b946020939093013593505050565b6000806000606084860312156105d457600080fd5b6105dd84610579565b92506105eb60208501610579565b9150604084013590509250925092565b60006020828403121561060d57600080fd5b61061682610579565b9392505050565b6000806040838503121561063057600080fd5b61063983610579565b915061064760208401610579565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561067857610678610650565b500390565b6000821982111561069057610690610650565b50019056fea164736f6c634300080c000a";

type TestERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20__factory extends ContractFactory {
  constructor(...args: TestERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    amountToMint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(amountToMint, overrides || {});
  }
  override deploy(
    amountToMint: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(amountToMint, overrides || {}) as Promise<
      TestERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestERC20__factory {
    return super.connect(runner) as TestERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new Interface(_abi) as TestERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestERC20 {
    return new Contract(address, _abi, runner) as unknown as TestERC20;
  }
}
