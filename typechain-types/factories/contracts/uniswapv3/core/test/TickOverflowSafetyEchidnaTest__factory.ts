/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  TickOverflowSafetyEchidnaTest,
  TickOverflowSafetyEchidnaTestInterface,
} from "../../../../../contracts/uniswapv3/core/test/TickOverflowSafetyEchidnaTest";

const _abi = [
  {
    inputs: [],
    name: "LO",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseFeeGrowthGlobal0X128",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseFeeGrowthGlobal1X128",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "target",
        type: "int24",
      },
    ],
    name: "moveToTick",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "int128",
        name: "liquidityDelta",
        type: "int128",
      },
    ],
    name: "setPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001805462ffffff191690556000600290815561002390600019610052565b6003556100336002600019610052565b6004556000600555600060065534801561004c57600080fd5b50610074565b60008261006f57634e487b7160e01b600052601260045260246000fd5b500490565b610aa7806100836000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630b0c061f146100515780633f03e19414610066578063541bdfb114610079578063af7593681461008c575b600080fd5b61006461005f36600461078d565b61009f565b005b61006461007436600461078d565b6100e9565b6100646100873660046107bd565b61012b565b61006461009a36600461080a565b61034f565b6005546100ac8282610842565b116100b657600080fd5b80600360008282546100c89190610842565b9250508190555080600560008282546100e19190610842565b909155505050565b6006546100f68282610842565b1161010057600080fd5b80600460008282546101129190610842565b9250508190555080600660008282546100e19190610842565b600f19600284900b1361013d57600080fd5b6010600283900b1261014e57600080fd5b8160020b8360020b1261016057600080fd5b60006101a884600160009054906101000a900460020b8460035460045460008042600060206001600160801b03610197919061085a565b60009998979695949392919061048a565b905060006101e184600160009054906101000a900460020b8560035460045460008042600160206001600160801b03610197919061085a565b9050811561027657600083600f0b121561024d57600285900b6000908152602081905260409020546001600160801b03161561021f5761021f61088e565b600285810b600090815260208190526040812081815560018101829055918201819055600390910155610276565b600285900b6000908152602081905260409020546001600160801b03166102765761027661088e565b801561030957600083600f0b12156102e057600284900b6000908152602081905260409020546001600160801b0316156102b2576102b261088e565b600284810b600090815260208190526040812081815560018101829055918201819055600390910155610309565b600284900b6000908152602081905260409020546001600160801b03166103095761030961088e565b82600f0b6002600082825461031e91906108a4565b9091555050600254600013156103365761033661088e565b60025461034857600060058190556006555b5050505050565b600f19600282900b1361036157600080fd5b6010600282900b1261037257600080fd5b600154600282810b91900b1461048757600154600282810b91900b12156104305760018054600091829182916103ab9160020b906108fd565b60020b81526020810191909152604001600020546001600160801b031611156103f857600180546103f6916103e39160020b906108fd565b6003546004546000929190838042610667565b505b6001805460020b90600061040b83610944565b91906101000a81548162ffffff021916908360020b62ffffff16021790555050610372565b60015460020b6000908152602081905260409020546001600160801b031615610474576001546003546004546104729260009260029190910b91838042610667565b505b6001805460020b90600061040b83610966565b50565b60028a900b600090815260208c90526040812080546001600160801b031682600f8c900b81136104c3576104be8c8361098a565b6104d6565b6104cc8c6109b5565b6104d690836109dc565b9050846001600160801b0316816001600160801b0316111561050b576040516368d2be8f60e01b815260040160405180910390fd5b6001600160801b0382811615908216158114159450156105e2578c60020b8e60020b136105b257600183018b9055600283018a905560038301805466ffffffffffffff8a166001600160f81b031990911667010000000000000073ffffffffffffffffffffffffffffffffffffffff8d16027fff00000000ffffffffffffffffffffffffffffffffffffffff00000000000000161717600160d81b63ffffffff8a16021790555b6003830180547effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b1790555b82546fffffffffffffffffffffffffffffffff19166001600160801b03821617835585610625578254610620908d90600160801b9004600f0b610a04565b61063c565b825461063c908d90600160801b9004600f0b610a4a565b83546001600160801b03918216600160801b0291161790925550909c9b505050505050505050505050565b600295860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b66ffffffffffffff73ffffffffffffffffffffffffffffffffffffffff6701000000000000008086048216909703169095027fffffffffff0000000000000000000000000000000000000000ffffffffffffff8416811760060b9097039490941666ffffffffffffff1987167fffffffffff00000000000000000000000000000000000000000000000000000084161781178590048216909703169092027fff00000000ffffffffffffffffffffffffffffffffffffffff000000000000009094166001600160f81b0319909216919091179093179190911790915554600160801b9004600f0b90565b60006020828403121561079f57600080fd5b5035919050565b8035600281900b81146107b857600080fd5b919050565b6000806000606084860312156107d257600080fd5b6107db846107a6565b92506107e9602085016107a6565b9150604084013580600f0b81146107ff57600080fd5b809150509250925092565b60006020828403121561081c57600080fd5b610825826107a6565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108555761085561082c565b500190565b60006001600160801b038084168061088257634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b634e487b7160e01b600052600160045260246000fd5b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038413811516156108de576108de61082c565b600160ff1b83900384128116156108f7576108f761082c565b50500190565b60008160020b8360020b6000821282627fffff038213811516156109235761092361082c565b82627fffff1903821281161561093b5761093b61082c565b50019392505050565b60008160020b627fffff81141561095d5761095d61082c565b60010192915050565b60008160020b627fffff198114156109805761098061082c565b6000190192915050565b60006001600160801b038083168185168083038211156109ac576109ac61082c565b01949350505050565b600081600f0b60016001607f1b03198114156109d3576109d361082c565b60000392915050565b60006001600160801b03838116908316818110156109fc576109fc61082c565b039392505050565b600081600f0b83600f0b600082128260016001607f1b0303821381151615610a2e57610a2e61082c565b8260016001607f1b031903821281161561093b5761093b61082c565b600081600f0b83600f0b600081128160016001607f1b031901831281151615610a7557610a7561082c565b8160016001607f1b03018313811615610a9057610a9061082c565b509003939250505056fea164736f6c634300080c000a";

type TickOverflowSafetyEchidnaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TickOverflowSafetyEchidnaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TickOverflowSafetyEchidnaTest__factory extends ContractFactory {
  constructor(...args: TickOverflowSafetyEchidnaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TickOverflowSafetyEchidnaTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TickOverflowSafetyEchidnaTest__factory {
    return super.connect(runner) as TickOverflowSafetyEchidnaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickOverflowSafetyEchidnaTestInterface {
    return new Interface(_abi) as TickOverflowSafetyEchidnaTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TickOverflowSafetyEchidnaTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TickOverflowSafetyEchidnaTest;
  }
}
