/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ZSwapFeeReceiver,
  ZSwapFeeReceiverInterface,
} from "../../contracts/ZSwapFeeReceiver";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ETHReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum zSwapFeeReceiver.CoinType",
        name: "coinType",
        type: "uint8",
      },
    ],
    name: "NFTWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum zSwapFeeReceiver.CoinType",
        name: "coinType",
        type: "uint8",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234605e5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556107e790816100648239f35b600080fdfe60806040526004361015610047575b361561001957600080fd5b6040513481527fbfe611b001dfcd411432f7bf0d79b82b4b2ee81511edac123a3403c357fb972a60203392a2005b6000803560e01c8062f2a6ab146104e7578062f714ce1461043d5780635fc3ea0b146101e4578063715018a61461018a5780638da5cb5b146101635763f2fde38b14610093575061000e565b34610160576020366003190112610160576004356001600160a01b0381169081900361015c576100c1610613565b80156101085781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b80fd5b5034610160578060031936011261016057546040516001600160a01b039091168152602090f35b50346101605780600319360112610160576101a3610613565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610160576060366003190112610160576004356001600160a01b0381169081900361015c57602435906102176105c0565b61021f610613565b61022761066b565b6040516370a0823160e01b8152306004820152602081602481865afa801561043257849186916103f9575b50106103ea5760405163a9059cbb60e01b602082019081526001600160a01b03909216602482018190526044808301869052825293906102936064826105db565b85806040948551936102a587866105db565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020860152519082885af13d156103dd573d9067ffffffffffffffff82116103c957845161031a939290919061030a601f8201601f1916602001846105db565b82523d89602084013e5b866106c1565b805180610349575b50509060008051602061079283398151915291815190815260016020820152a36001805580f35b81602091810103126103c557602001518015908115036103c55761036e573880610322565b815162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b8580fd5b634e487b7160e01b88526041600452602488fd5b9061031a91606090610314565b63569d45cf60e11b8452600484fd5b9150506020813d60201161042a575b81610415602093836105db565b810103126104265783905138610252565b8480fd5b3d9150610408565b6040513d87823e3d90fd5b5034610160576040366003190112610160576024356001600160a01b03811690600435908290036104e357610470610613565b61047861066b565b8047106104d45780838092848282156104cb575b839283928392f1156104be57604080519182526000602083015260008051602061079283398151915291a36001805580f35b50604051903d90823e3d90fd5b506108fc61048c565b63569d45cf60e11b8352600483fd5b8280fd5b5034610160576060366003190112610160576004356001600160a01b0381169081900361015c576024359061051a6105c0565b91610523610613565b61052b61066b565b813b156105bc57604051632142170760e11b81523060048201526001600160a01b03909316602484018190526044840182905292848160648183875af180156104325761059a575b50604080519182526000602083015260008051602061079283398151915291a36001805580f35b936105b58160008051602061079283398151915293966105db565b9390610573565b8380fd5b604435906001600160a01b03821682036105d657565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176105fd57604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b0316330361062757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60026001541461067c576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9192901561072357508151156106d5575090565b3b156106de5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156107365750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b8381106107795750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161075756fe2965c46c17b4f2d6b6be246b4dd3698b526b03eaeada24052ffc8de42f71a9c6a2646970667358221220d8fb0ab9d7d14701cafa957afeba910cfc8cb394a571c72eae40395e8897647664736f6c634300081a0033";

type ZSwapFeeReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZSwapFeeReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZSwapFeeReceiver__factory extends ContractFactory {
  constructor(...args: ZSwapFeeReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZSwapFeeReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZSwapFeeReceiver__factory {
    return super.connect(runner) as ZSwapFeeReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZSwapFeeReceiverInterface {
    return new Interface(_abi) as ZSwapFeeReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ZSwapFeeReceiver {
    return new Contract(address, _abi, runner) as unknown as ZSwapFeeReceiver;
  }
}
