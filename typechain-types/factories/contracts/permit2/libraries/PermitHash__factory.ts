/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PermitHash,
  PermitHashInterface,
} from "../../../../contracts/permit2/libraries/PermitHash";

const _abi = [
  {
    inputs: [],
    name: "_PERMIT_BATCH_TRANSFER_FROM_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_BATCH_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_BATCH_WITNESS_TRANSFER_FROM_TYPEHASH_STUB",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_DETAILS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_SINGLE_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_TRANSFER_FROM_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_TRANSFER_FROM_WITNESS_TYPEHASH_STUB",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_TOKEN_PERMISSIONS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_TOKEN_PERMISSIONS_TYPESTRING",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460195761045e908161001f823930815050f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081633eb8b8fd146103ab57508063415e982d146103755780636302c3cf1461033f5780636e4f27751461030957806378f16830146102d357806384b8efbb1461021657806390bbf2f314610152578063c0c7fa7e146100bd5763c5df4f031461008257600080fd5b60003660031901126100b85760206040517ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d08152f35b600080fd5b60003660031901126100b857604051606081019080821067ffffffffffffffff83111761013c5761013891604052602e81527f546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c7560208201526d696e7432353620616d6f756e742960901b6040820152604051918291826103df565b0390f35b634e487b7160e01b600052604160045260246000fd5b60003660031901126100b85760405160a081019080821067ffffffffffffffff83111761013c5761013891604052606b81527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208201527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c6164647260408201527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608201526a0d88191958591b1a5b994b60aa1b6080820152604051918291826103df565b60003660031901126100b85760405160a081019080821067ffffffffffffffff83111761013c5761013891604052606481527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208201527f65726d697373696f6e73207065726d69747465642c616464726573732073706560408201527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c6060820152631a5b994b60e21b6080820152604051918291826103df565b60003660031901126100b85760206040517f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068152f35b60003660031901126100b85760206040517f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b36788152f35b60003660031901126100b85760206040517faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638152f35b60003660031901126100b85760206040517f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a18152f35b60003660031901126100b857807ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b76660209252f35b91909160208152825180602083015260005b818110610412575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016103f156fea264697066735822122059b70abeda27b5733253110a9a1e876832d34207a5c36c7b6c3d49653af9f80a64736f6c634300081a0033";

type PermitHashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermitHashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermitHash__factory extends ContractFactory {
  constructor(...args: PermitHashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermitHash & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermitHash__factory {
    return super.connect(runner) as PermitHash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermitHashInterface {
    return new Interface(_abi) as PermitHashInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PermitHash {
    return new Contract(address, _abi, runner) as unknown as PermitHash;
  }
}
