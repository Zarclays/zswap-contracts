/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBatchFlashBorrower,
  IBatchFlashBorrowerInterface,
} from "../../../../contracts/bentobox/BentoBoxV1.sol/IBatchFlashBorrower";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onBatchFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBatchFlashBorrower__factory {
  static readonly abi = _abi;
  static createInterface(): IBatchFlashBorrowerInterface {
    return new Interface(_abi) as IBatchFlashBorrowerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBatchFlashBorrower {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBatchFlashBorrower;
  }
}
