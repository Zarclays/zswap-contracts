/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISwapper,
  ISwapperInterface,
} from "../../../../contracts/bentobox/KashiPairMediumRiskV1.sol/ISwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shareToMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareFrom",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "extraShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareReturned",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "refundTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shareFromSupplied",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareToExact",
        type: "uint256",
      },
    ],
    name: "swapExact",
    outputs: [
      {
        internalType: "uint256",
        name: "shareUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareReturned",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISwapper__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapperInterface {
    return new Interface(_abi) as ISwapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISwapper {
    return new Contract(address, _abi, runner) as unknown as ISwapper;
  }
}
