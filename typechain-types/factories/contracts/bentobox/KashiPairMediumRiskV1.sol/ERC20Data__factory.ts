/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Data,
  ERC20DataInterface,
} from "../../../../contracts/bentobox/KashiPairMediumRiskV1.sol/ERC20Data";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610188806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806370a08231146100465780637ecebe001461006f578063dd62ed3e14610082575b600080fd5b6100596100543660046100f3565b610095565b6040516100669190610149565b60405180910390f35b61005961007d3660046100f3565b6100a7565b610059610090366004610115565b6100b9565b60006020819052908152604090205481565b60026020526000908152604090205481565b600160209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146100ed57600080fd5b92915050565b600060208284031215610104578081fd5b61010e83836100d6565b9392505050565b60008060408385031215610127578081fd5b61013184846100d6565b915061014084602085016100d6565b90509250929050565b9081526020019056fea2646970667358221220a2f09861ebde433613acbcda586ab9dc5898ba46d811b2acaf8b7936c4719cab64736f6c634300060c0033";

type ERC20DataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20DataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Data__factory extends ContractFactory {
  constructor(...args: ERC20DataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Data & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Data__factory {
    return super.connect(runner) as ERC20Data__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20DataInterface {
    return new Interface(_abi) as ERC20DataInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Data {
    return new Contract(address, _abi, runner) as unknown as ERC20Data;
  }
}
