/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Domain,
  DomainInterface,
} from "../../../../contracts/bentobox/KashiPairMediumRiskV1.sol/Domain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b504660a081905261002081610029565b6080525061009c565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921882306040516020016100609392919061007d565b604051602081830303815290604052805190602001209050919050565b92835260208301919091526001600160a01b0316604082015260600190565b60805160a0516101606100bd600039806053525080608852506101606000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633644e51514610030575b600080fd5b61003861004e565b6040516100459190610102565b60405180910390f35b6000467f0000000000000000000000000000000000000000000000000000000000000000811461008657610081816100ae565b6100a8565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921882306040516020016100e59392919061010b565b604051602081830303815290604052805190602001209050919050565b90815260200190565b92835260208301919091526001600160a01b031660408201526060019056fea26469706673582212203154895ba67fdf8987db585436198dda88fbd00672977201c50b4320e8561a4c64736f6c634300060c0033";

type DomainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DomainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Domain__factory extends ContractFactory {
  constructor(...args: DomainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Domain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Domain__factory {
    return super.connect(runner) as Domain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DomainInterface {
    return new Interface(_abi) as DomainInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Domain {
    return new Contract(address, _abi, runner) as unknown as Domain;
  }
}
