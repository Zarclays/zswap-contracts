/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SushiMaker,
  SushiMakerInterface,
} from "../../contracts/SushiMaker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bar",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sushi",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotConvert",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBridge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPair",
    type: "error",
  },
  {
    inputs: [],
    name: "MustUseEOA",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "LogBridgeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "server",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSUSHI",
        type: "uint256",
      },
    ],
    name: "LogConvert",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "bridgeFor",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token0",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "token1",
        type: "address[]",
      },
    ],
    name: "convertMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV2Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101003461012c57601f6113cf38819003918201601f19168301916001600160401b038311848410176101315780849260a09460405283398101031261012c578061004c6100a692610147565b9061005960208201610147565b61006560408301610147565b9061007e608061007760608601610147565b9401610147565b936100883361015b565b600180556001600160a01b031660805260a05260c05260e05261015b565b60405161122c90816101a382396080518181816101a60152818161063f0152610d80015260a051818181609501528181610a8501528181610b5d01528181610baa01526110ff015260c0518181816102de01528181610a4c01528181610b180152611121015260e0518181816103890152818161059101528181610ab30152610bd40152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361012c57565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001257600080fd5b60003560e01c8063303e6aa41461043b578063715018a6146103e25780638da5cb5b146103b95780639d22ae8c146102a6578063a761a93914610271578063bd1b820c146101d5578063c45a015514610190578063f2fde38b146100c95763febb0f7e1461007f57600080fd5b346100c45760003660031901126100c4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346100c45760203660031901126100c4576100e2610505565b6100ea610872565b6001600160a01b0316801561013c57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346100c45760003660031901126100c4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100c45760403660031901126100c4576101ee610505565b6101f661051b565b3233036102605760026001541461021b5761021591600260015561060b565b60018055005b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6314a4054760e01b60005260046000fd5b346100c45760203660031901126100c457602061029461028f610505565b61056b565b6040516001600160a01b039091168152f35b346100c45760403660031901126100c4576102bf610505565b6102c761051b565b906102d0610872565b6001600160a01b03908116907f00000000000000000000000000000000000000000000000000000000000000001681141580610386575b80610373575b1561036257600081815260026020526040812080546001600160a01b0319166001600160a01b0390941693841790557f2e103aa707acc565f9a1547341914802b2bfe977fd79c595209f248ae4b006139080a3005b635b43e1a760e01b60005260046000fd5b506001600160a01b03821681141561030d565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316811415610307565b346100c45760003660031901126100c4576000546040516001600160a01b039091168152602090f35b346100c45760003660031901126100c4576103fb610872565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100c45760403660031901126100c45760043567ffffffffffffffff81116100c45761046c9036906004016104d4565b60243567ffffffffffffffff81116100c45761048c9036906004016104d4565b91903233036102605760005b8281106104a157005b806104ce6104ba6104b5600194878a610531565b610557565b6104c86104b5848988610531565b9061060b565b01610498565b9181601f840112156100c45782359167ffffffffffffffff83116100c4576020808501948460051b0101116100c457565b600435906001600160a01b03821682036100c457565b602435906001600160a01b03821682036100c457565b91908110156105415760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036100c45790565b6001600160a01b039081166000908152600260205260409020541690811561058f57565b7f00000000000000000000000000000000000000000000000000000000000000009150565b90601f8019910116810190811067ffffffffffffffff8211176105d657604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126100c457516001600160a01b03811681036100c45790565b60405163e6a4390560e01b81526001600160a01b0380831660048301528316602482015290929190602081806044810103817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156107c157600091610853575b506001600160a01b0316908115610842576040516370a0823160e01b8152306004820152602081602481865afa80156107c15760009061080e575b6106bf915083806108ca565b6040805163226bf2d160e21b81523060048201529290836024816000855af19485156107c15760009384966107cd575b50839495600494956020829460405197888092630dfe168160e01b82525afa9586156107c157600096610790575b506001600160a01b0383811696168603610782575b505081858461074093610a24565b906040519485526020850152604084015260018060a01b0316917fd06b1d7ed79b664d17472c6f6997b929f1abe463ccccb4e5b6a0038f2f730c1560603392a4565b909550915081610740610732565b6107b391965060203d6020116107ba575b6107ab81836105b4565b8101906105ec565b943861071d565b503d6107a1565b6040513d6000823e3d90fd5b9395506040843d604011610806575b816107e9604093836105b4565b81010312610802578351602090940151955060046106ef565b8580fd5b3d91506107dc565b506020813d60201161083a575b81610828602093836105b4565b810103126100c4576106bf90516106b3565b3d915061081b565b630793df6360e21b60005260046000fd5b61086c915060203d6020116107ba576107ab81836105b4565b38610678565b6000546001600160a01b0316330361088657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60405163a9059cbb60e01b602082019081526001600160a01b0390931660248201526044808201949094529283529091906109066064836105b4565b60018060a01b03169060008060409485519361092287866105b4565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020860152519082865af13d15610a17573d9067ffffffffffffffff82116105d6578451610994949092610985601f8201601f1916602001856105b4565b83523d6000602085013e611159565b8051806109a057505050565b81602091810103126100c457602001518015908115036100c4576109c15750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b9161099492606091611159565b926001600160a01b03808516939192908116848103610b1057505090610a49916110d6565b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691808303610aad57505081610aaa917f0000000000000000000000000000000000000000000000000000000000000000906108ca565b90565b909291507f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03821603610aec57610aaa92506110f9565b50600090610b0983610b00610aaa9561056b565b92833092610d48565b9080610a24565b9194929390927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316929091838103610b8c5750505091610b8791610b8285610aaa96957f0000000000000000000000000000000000000000000000000000000000000000906108ca565b6110f9565b6110d6565b9295939192818703610bcf5750505090610b8791610b8284610aaa967f0000000000000000000000000000000000000000000000000000000000000000906108ca565b9195507f0000000000000000000000000000000000000000000000000000000000000000949291906001600160a01b038616808303610c26575050505090610b87610aaa94610c2093853092610d48565b906110f9565b939492938103610c48575050610aaa9450610c209291610b8791853092610d48565b90939450610c558361056b565b93610c5f8761056b565b916001600160a01b03861603610c88575050610aaa9491610c8291843092610d48565b91610a24565b9294919390926001600160a01b03841603610cb45750610aaa94610cae91833092610d48565b92610a24565b9394610cca610aaa96610cae9395873092610d48565b93833092610d48565b51906001600160701b03821682036100c457565b8115610cf1570490565b634e487b7160e01b600052601260045260246000fd5b919082519283825260005b848110610d33575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610d12565b60405163e6a4390560e01b81526001600160a01b038083166004830152909216602483015293926000929091602081806044810103817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156110cb5784916110ac575b506001600160a01b031690811561109d57604051630240bc6b60e21b8152606081600481865afa908115611092578590869261102f575b506001600160701b0380911691166103e58302908382046103e51484151715610f3057604051630dfe168160e01b81529860208a600481895afa998a1561102457889a611003575b506001600160a01b0390811699168903610f4457610e559082611146565b916103e88102908082046103e81490151715610f3057610e8a9392610e7e8693610e84936110d6565b90610ce7565b976108ca565b604051916020610e9a81856105b4565b848452601f198101903690850137813b15610f2c5760405163022c0d9f60e01b815260048101859052602481018790526001600160a01b039091166044820152608060648201529183918391829084908290610efa906084830190610d07565b03925af18015610f2157610f0c575050565b610f178280926105b4565b610f1e5750565b80fd5b6040513d84823e3d90fd5b8380fd5b634e487b7160e01b87526011600452602487fd5b91610f4f9082611146565b916103e88102908082046103e81490151715610f3057610f789392610e7e8693610e84936110d6565b60405191610f876020846105b4565b8383526000366020850137813b15610f2c5760405163022c0d9f60e01b815260048101879052602481018590526001600160a01b039091166044820152608060648201529183918391829084908290610fe4906084830190610d07565b03925af18015610f2157610ff6575050565b81611000916105b4565b50565b61101d919a5060203d6020116107ba576107ab81836105b4565b9838610e37565b6040513d8a823e3d90fd5b9150506060813d60601161108a575b8161104b606093836105b4565b810103126110865761105c81610cd3565b604061106a60208401610cd3565b92015163ffffffff811603610802576001600160701b03610def565b8480fd5b3d915061103e565b6040513d87823e3d90fd5b6318ce43d960e31b8452600484fd5b6110c5915060203d6020116107ba576107ab81836105b4565b38610db8565b6040513d86823e3d90fd5b919082018092116110e357565b634e487b7160e01b600052601160045260246000fd5b610aaa917f0000000000000000000000000000000000000000000000000000000000000000917f000000000000000000000000000000000000000000000000000000000000000090610d48565b818102929181159184041417156110e357565b919290156111bb575081511561116d575090565b3b156111765790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156111ce5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906111f2906024830190610d07565b0390fdfea2646970667358221220eb545bd7048228a1bc49f099a5a8b52cacbc059b7f419a85d592767db629ae0064736f6c634300081a0033";

type SushiMakerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiMakerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiMaker__factory extends ContractFactory {
  constructor(...args: SushiMakerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factory: AddressLike,
    _bar: AddressLike,
    _sushi: AddressLike,
    _weth: AddressLike,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factory,
      _bar,
      _sushi,
      _weth,
      owner,
      overrides || {}
    );
  }
  override deploy(
    _factory: AddressLike,
    _bar: AddressLike,
    _sushi: AddressLike,
    _weth: AddressLike,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factory,
      _bar,
      _sushi,
      _weth,
      owner,
      overrides || {}
    ) as Promise<
      SushiMaker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SushiMaker__factory {
    return super.connect(runner) as SushiMaker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiMakerInterface {
    return new Interface(_abi) as SushiMakerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SushiMaker {
    return new Contract(address, _abi, runner) as unknown as SushiMaker;
  }
}
