/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SushiBar, SushiBarInterface } from "../../contracts/SushiBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sushi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sushi",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610352576110936020813803918261001c81610357565b93849283398101031261035257516001600160a01b03811690819003610352576100466040610357565b90600882526729bab9b434a130b960c11b60208301526100666040610357565b60068152650785a737761760d41b602082015282519091906001600160401b03811161025b57600354600181811c91168015610348575b602082101461023b57601f81116102e3575b506020601f821160011461027c5781929394600092610271575b50508160011b916000199060031b1c1916176003555b81516001600160401b03811161025b57600454600181811c91168015610251575b602082101461023b57601f81116101d6575b50602092601f82116001146101715792819293600092610166575b50508160011b916000199060031b1c1916176004555b600580546001600160a01b031916919091179055604051610d16908161037d8239f35b01519050388061012d565b601f198216936004600052806000209160005b8681106101be57508360019596106101a5575b505050811b01600455610143565b015160001960f88460031b161c19169055388080610197565b91926020600181928685015181550194019201610184565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610231575b601f0160051c01905b8181106102255750610112565b60008155600101610218565b909150819061020f565b634e487b7160e01b600052602260045260246000fd5b90607f1690610100565b634e487b7160e01b600052604160045260246000fd5b0151905038806100c9565b601f198216906003600052806000209160005b8181106102cb575095836001959697106102b2575b505050811b016003556100df565b015160001960f88460031b161c191690553880806102a4565b9192602060018192868b01518155019401920161028f565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061033e575b601f0160051c01905b81811061033257506100af565b60008155600101610325565b909150819061031c565b90607f169061009d565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761025b5760405256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146107df57508063095ea7b3146107b95780630a0879031461079057806318160ddd1461077257806323b872dd146106b4578063313ce56714610698578063395093511461064657806367dfd4c91461047257806370a082311461043857806395d89b4114610330578063a457c2d714610289578063a59f3e0c14610140578063a9059cbb1461010f5763dd62ed3e146100b957600080fd5b3461010a57604036600319011261010a576100d26108e4565b6100da6108fa565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b3461010a57604036600319011261010a5761013561012b6108e4565b6024359033610abe565b602060405160018152f35b3461010a57602036600319011261010a576004356024602060018060a01b0360055416604051928380926370a0823160e01b82523060048301525afa90811561021e57600091610253575b506000916020916002548015801561024b575b851461022a5750506101b08133610c3d565b6005546040516323b872dd60e01b815233600482015230602482015260448101929092529092839160649183916001600160a01b03165af1801561021e576101f457005b6102159060203d602011610217575b61020d8183610910565b81019061099e565b005b503d610203565b6040513d6000823e3d90fd5b6102469161023b610240928561096b565b61097e565b33610c3d565b6101b0565b50811561019e565b906020823d602011610281575b8161026d60209383610910565b8101031261027e575051600061018b565b80fd5b3d9150610260565b3461010a57604036600319011261010a576102a26108e4565b60243590336000526001602052604060002060018060a01b038216600052602052604060002054918083106102dd57610135920390336109b6565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b3461010a57600036600319011261010a5760405160006004548060011c9060018116801561042e575b60208310811461041a578285529081156103f65750600114610396575b6103928361038681850382610910565b6040519182918261089b565b0390f35b91905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b8082106103dc57509091508101602001610386610376565b9192600181602092548385880101520191019092916103c4565b60ff191660208086019190915291151560051b840190910191506103869050610376565b634e487b7160e01b84526022600452602484fd5b91607f1691610359565b3461010a57602036600319011261010a576001600160a01b036104596108e4565b1660005260006020526020604060002054604051908152f35b3461010a57602036600319011261010a576004356024600254602060018060a01b0360055416604051938480926370a0823160e01b82523060048301525afa91821561021e57600092610610575b5061023b6104ce928461096b565b9033156105c1573360005260006020526040600020549181831061057157600082602093829533845283865203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a360055460405163a9059cbb60e01b815233600482015260248101929092529092839160449183916001600160a01b03165af1801561021e576101f457005b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b91506020823d60201161063e575b8161062b60209383610910565b8101031261010a5790519061023b6104c0565b3d915061061e565b3461010a57604036600319011261010a576101356106626108e4565b336000526001602052604060002060018060a01b03821660005260205261069160406000206024359054610948565b90336109b6565b3461010a57600036600319011261010a57602060405160128152f35b3461010a57606036600319011261010a576106cd6108e4565b6106d56108fa565b6001600160a01b0382166000908152600160208181526040808420338552909152909120549260443592918401610711575b6101359350610abe565b82841061072d5761072883610135950333836109b6565b610707565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b3461010a57600036600319011261010a576020600254604051908152f35b3461010a57600036600319011261010a576005546040516001600160a01b039091168152602090f35b3461010a57604036600319011261010a576101356107d56108e4565b60243590336109b6565b3461010a57600036600319011261010a5760006003548060011c90600181168015610891575b60208310811461041a578285529081156103f65750600114610831576103928361038681850382610910565b91905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b916000905b80821061087757509091508101602001610386610376565b91926001816020925483858801015201910190929161085f565b91607f1691610805565b91909160208152825180602083015260005b8181106108ce575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016108ad565b600435906001600160a01b038216820361010a57565b602435906001600160a01b038216820361010a57565b90601f8019910116810190811067ffffffffffffffff82111761093257604052565b634e487b7160e01b600052604160045260246000fd5b9190820180921161095557565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561095557565b8115610988570490565b634e487b7160e01b600052601260045260246000fd5b9081602091031261010a5751801515810361010a5790565b6001600160a01b0316908115610a6d576001600160a01b0316918215610a1d5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0316908115610bea576001600160a01b0316918215610b9957816000526000602052604060002054818110610b4557817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209285600052600084520360406000205584600052600082526040600020818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0316908115610c9b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610c7f600094600254610948565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fdfea26469706673582212206f747d284bb8d583c569e8c3e8c419ff8bf7545fdffc4cbdecb3a866f94a1e2364736f6c634300081a0033";

type SushiBarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiBarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiBar__factory extends ContractFactory {
  constructor(...args: SushiBarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sushi: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sushi, overrides || {});
  }
  override deploy(
    _sushi: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sushi, overrides || {}) as Promise<
      SushiBar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SushiBar__factory {
    return super.connect(runner) as SushiBar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiBarInterface {
    return new Interface(_abi) as SushiBarInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SushiBar {
    return new Contract(address, _abi, runner) as unknown as SushiBar;
  }
}
