/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BoringBatchable,
  BoringBatchableInterface,
} from "../../../contracts/MiniChefV3.sol/BoringBatchable";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "innerError",
        type: "bytes",
      },
    ],
    name: "BatchError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBoringERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460155761043e908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80637c516e94146100375763d2423b511461003257600080fd5b6100ab565b3461009557610100366003190112610095576004356100558161009a565b602435906100628261009a565b6044359161006f8361009a565b60a43560843560643560ff83168303610095576100939560c4359460e43596610164565b005b600080fd5b6001600160a01b0381160361009557565b60403660031901126100955760043567ffffffffffffffff8111610095573660238201121561009557806004013567ffffffffffffffff8111610095573660248260051b84010111610095576024359081151582036100955760246100939301610254565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761014857604052565b610110565b600091031261009557565b6040513d6000823e3d90fd5b92969194909290916001600160a01b0390911690813b156100955760009660ff889460e4976040519b8c9a8b9963d505accf60e01b8b5260018060a01b031660048b015260018060a01b031660248a01526044890152606488015216608486015260a485015260c48401525af180156101f5576101de5750565b806101ed60006101f393610126565b8061014d565b565b610158565b908092918237016000815290565b67ffffffffffffffff811161014857601f01601f191660200190565b3d1561024f573d9061023582610208565b916102436040519384610126565b82523d6000602084013e565b606090565b90919260005b838110156102e15760008160051b840135601e19853603018112156102dd57840180359067ffffffffffffffff82116102d95760200181360381136102d9579082916102ab604051809381936101fa565b0390305af46102b8610224565b9015806102d2575b6102cd575060010161025a565b610344565b50856102c0565b8280fd5b5080fd5b5092505050565b60005b8381106102fb5750506000910152565b81810151838201526020016102eb565b90602091610324815180928185528580860191016102e8565b601f01601f1916010190565b90602061034192818152019061030b565b90565b60448151106103e35760048101518101602481019190602090829003126100955760248101519067ffffffffffffffff8211610095570190806043830112156100955760248201519161039683610208565b916103a46040519384610126565b83835260448285010111610095576103df926103c79160446020850191016102e8565b60405162461bcd60e51b815291829160048301610330565b0390fd5b60405163d935448560e01b8152602060048201529081906103df90602483019061030b56fea2646970667358221220036d8fc1e353f10d962a17a89c9a57884424d69136b992936648167ad1bcdc2864736f6c634300081a0033";

type BoringBatchableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoringBatchableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoringBatchable__factory extends ContractFactory {
  constructor(...args: BoringBatchableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BoringBatchable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BoringBatchable__factory {
    return super.connect(runner) as BoringBatchable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoringBatchableInterface {
    return new Interface(_abi) as BoringBatchableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BoringBatchable {
    return new Contract(address, _abi, runner) as unknown as BoringBatchable;
  }
}
