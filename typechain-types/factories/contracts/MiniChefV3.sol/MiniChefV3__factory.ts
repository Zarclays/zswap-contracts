/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MiniChefV3,
  MiniChefV3Interface,
} from "../../../contracts/MiniChefV3.sol/MiniChefV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_reward",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "innerError",
        type: "bytes",
      },
    ],
    name: "BatchError",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawNotGood",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "LogRewardPerSecond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "REWARD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdateSelectedPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBoringERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accRewardPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct MiniChefV3.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "rewardDebt",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346101ac576000611eff3881900390601f8201601f191684016001600160401b0381118582101761019857918085926060946040528339810103126101955781516001600160a01b03811681036101915760208301516040909301516001600160a01b038116939084900361018d5782546001600160a01b0319163390811784556040517fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a27893602093919286600080516020611edf8339815191528180a36001600255608052806008558152a1508015801590610185575b15610140576000548160018060a01b038216600080516020611edf833981519152600080a36001600160a01b031990811691909117600055600180549091169055604051611d2d90816101b282396080518181816106460152818161101d01526110cf0152f35b60405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606490fd5b5060006100d9565b8280fd5b5080fd5b80fd5b634e487b7160e01b84526041600452602484fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063078dfbe7146101c7578063081e3eda146101c25780630ad58d2f146101bd5780630b62ee1c146101b85780631526fe27146101b357806317caf6f1146101ae57806318fccc76146101a95780631eaaa045146101a45780632f940c701461019f5780634e71e0c81461019a57806351eb05a614610195578063630b5ba11461019057806364482f791461018b57806366da58151461018657806378ed5d1f1461018157806379ba50971461017c57806379d12ffb146101775780637c516e94146101725780638da5cb5b1461016d5780638dbdbe6d146101685780638f10369a1461016357806393f1a40b1461015e57806398969e8214610159578063cab34c0814610154578063d1abb9071461014f578063d2423b511461014a5763e30c39781461014557600080fd5b611238565b611173565b61104c565b611007565b610ea9565b610e4e565b610e30565b610d1c565b610cf3565b610c1d565b610bdb565b610b6a565b610b0f565b610a9b565b6109e8565b6109cf565b610995565b610921565b610853565b610731565b6105b9565b61059b565b610543565b61049b565b61037a565b610339565b6101ec565b6001600160a01b038116036101dd57565b600080fd5b801515036101dd57565b346101dd5760603660031901126101dd57600435610209816101cc565b60243590610216826101e2565b60443591610223836101e2565b61023860018060a01b03600054163314611261565b1561030d576001600160a01b03811691821580159190610305575b50156102c8576000546102b492906001600160a01b03908116167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018060a01b03166bffffffffffffffffffffffff60a01b6000541617600055565b600180546001600160a01b0319169055005b005b60405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606490fd5b905038610253565b600180546001600160a01b0319166001600160a01b03909216919091179055005b60009103126101dd57565b346101dd5760003660031901126101dd576020600354604051908152f35b60609060031901126101dd576004359060243590604435610377816101cc565b90565b346101dd5761038836610357565b91906103938261160c565b600083815260066020908152604080832033845290915290209082825410610459576103de60018301916103d86103cd84549251876112e0565b64e8d4a51000900490565b90611313565b90556103eb82825461133b565b905561041881846104136103fe86610af4565b905460039190911b1c6001600160a01b031690565b6118f5565b6040519081526001600160a01b039092169133907f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21329080602081015b0390a4005b6388606f9560e01b60005260046000fd5b9181601f840112156101dd5782359167ffffffffffffffff83116101dd576020808501948460051b0101116101dd57565b346101dd5760203660031901126101dd5760043567ffffffffffffffff81116101dd576104cc90369060040161046a565b60005b818110156102c6576001906104e98160051b85013561160c565b50016104cf565b634e487b7160e01b600052603260045260246000fd5b60035481101561053e576003600081815291027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0191565b6104f0565b346101dd5760203660031901126101dd576004356003548110156101dd5761056a90610506565b50805461059760026001840154930154604051938493846040919493926060820195825260208201520152565b0390f35b346101dd5760003660031901126101dd576020600754604051908152f35b346101dd5760403660031901126101dd576004356024356105d9816101cc565b6105e28261160c565b9060016106206103cd610615610602876000526006602052604060002090565b3360009081526020919091526040902090565b9485549051906112e0565b9201918061062f845482611313565b93556040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000009290916020836024816001600160a01b0388165afa90811561072c576106a06106ae9287956000916106fd575b5061069b6113e9565b61197d565b836106a9611415565b6119c5565b816106ec575b50506040519182525033907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249549080602081015b0390a3005b6106f5926118f5565b3881816106b4565b61071f915060203d602011610725575b610717818361137f565b8101906113a1565b38610692565b503d61070d565b6113b0565b346101dd5760603660031901126101dd57602435600435610751826101cc565b6107bd60443592610761846101e2565b61077660018060a01b03600054163314611261565b6001600160a01b03811660008181526005602052604090205490949061079f9060ff1615611462565b610846575b6107b86107b38460075461147a565b600755565b611487565b6107dd6107c86113bc565b60008152426020820152826040820152611524565b6001600160a01b038216600090815260056020526040902061080690805460ff19166001179055565b7f4710feb78e3bce8d2e3ca2989a8eb2f8bcd32a6a55b4535942c180fc4d2e29526106e761083560045461132c565b604051938452929081906020820190565b61084e611732565b6107a4565b346101dd5760403660031901126101dd57602435600435610873826101cc565b6000818152600660209081526040808320338452909152902060006001825492828155015560045482101561053e5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8201546108e190829085906001600160a01b03166118f5565b6040519081526001600160a01b039092169133907f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b908060208101610454565b346101dd5760003660031901126101dd576001546001600160a01b03811661094a33821461157a565b6000548160018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199081169190911760005516600155005b346101dd5760203660031901126101dd5760606109b360043561160c565b6040805191805183526020810151602084015201516040820152f35b346101dd5760003660031901126101dd576102c6611732565b346101dd5760603660031901126101dd57600435602435604435610a0b816101e2565b610a2060018060a01b03600054163314611261565b610a8e575b6007546002610a3384610506565b5001548103908111610a8957818101809111610a89577f942cc7e17a17c164bd977f32ab8c54265d5b9d481e4e352bf874f1e568874e7c91602091600755806002610a7d86610506565b500155604051908152a2005b6112ac565b610a96611732565b610a25565b346101dd5760203660031901126101dd577fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a2786020600435610ae760018060a01b03600054163314611261565b80600855604051908152a1005b60045481101561053e57600460005260206000200190600090565b346101dd5760203660031901126101dd576004356004548110156101dd5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01546040516001600160a01b039091168152602090f35b346101dd5760003660031901126101dd57600154610b92336001600160a01b0383161461157a565b6000543360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b0319908116331760005516600155005b346101dd5760203660031901126101dd57600435610bf8816101cc565b60018060a01b03166000526005602052602060ff604060002054166040519015158152f35b346101dd576101003660031901126101dd57600435610c3b816101cc565b60243590610c48826101cc565b604435610c54816101cc565b606435926084359060a43560ff811681036101dd5760c435946001600160a01b031660e435813b156101dd5760009660ff889460e4976040519b8c9a8b9963d505accf60e01b8b5260018060a01b031660048b015260018060a01b031660248a01526044890152606488015216608486015260a485015260c48401525af1801561072c57610cde57005b80610ced60006102c69361137f565b8061032e565b346101dd5760003660031901126101dd576000546040516001600160a01b039091168152602090f35b346101dd57610d2a36610357565b9190610d3c610d37611756565b611a1f565b610d458261160c565b610d50610d3761177c565b610dbf6001610d8486610d6d876000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b610d8f610d376117a7565b610d9a85825461147a565b8155610da7610d376117d0565b0191610db96103cd84549251866112e0565b906117fb565b9055610dcc610d37611817565b610de581610ddc6103fe85610af4565b30903390611a5a565b610df0610d37611846565b6040519081526001600160a01b039092169133907f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47908060208101610454565b346101dd5760003660031901126101dd576020600854604051908152f35b346101dd5760403660031901126101dd576040610e96602435600435610e73826101cc565b6000526006602052826000209060018060a01b0316600052602052604060002090565b6001815491015482519182526020820152f35b346101dd5760403660031901126101dd57602435600435610ec9826101cc565b610ef3610ede610ed883610506565b506115e4565b92610d6d836000526006602052604060002090565b610f10610f046103fe855194610af4565b6001600160a01b031690565b6040516370a0823160e01b81523060048201529390602090859060249082905afa90811561072c576103cd610f7994600193610f709361059798600092610fe6575b50602081015180421180610fdd575b610f89575b50505084546112e0565b91015490611313565b6040519081529081906020820190565b91610fca610fc5610fbc610fcf946040610fb3610faa610fd59a994261133b565b600854906112e0565b910151906112e0565b600754906112f3565b6112c2565b6112f3565b9061147a565b388080610f66565b50821515610f61565b61100091925060203d60201161072557610717818361137f565b9038610f52565b346101dd5760003660031901126101dd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101dd5761105a36610357565b826110648161160c565b9261107c610602836000526006602052604060002090565b6110986103cd825461109085821015611876565b8751906112e0565b6110b960018301916103d86103cd6110b1855484611313565b9951876112e0565b90556110c682825461133b565b90556110f384847f00000000000000000000000000000000000000000000000000000000000000006118f5565b61110481846104136103fe86610af4565b6040519081526001600160a01b03929092169133907f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec213290602090a460405190815233907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249549080602081016106e7565b60403660031901126101dd5760043567ffffffffffffffff81116101dd5761119f90369060040161046a565b602435916111ac836101e2565b36819003601e190160005b838110156102c65760008160051b8401358381121561123457840180359067ffffffffffffffff821161123057602001813603811361123057908291611202604051809381936118b7565b0390305af461120f6118c5565b901580611229575b61122457506001016111b7565b611a9e565b5085611217565b8280fd5b5080fd5b346101dd5760003660031901126101dd576001546040516001600160a01b039091168152602090f35b1561126857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b634e487b7160e01b600052601160045260246000fd5b9064e8d4a5100082029180830464e8d4a510001490151715610a8957565b81810292918115918404141715610a8957565b81156112fd570490565b634e487b7160e01b600052601260045260246000fd5b81810392916000138015828513169184121617610a8957565b600019810191908211610a8957565b91908203918211610a8957565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761137a57604052565b611348565b90601f8019910116810190811067ffffffffffffffff82111761137a57604052565b908160209103126101dd575190565b6040513d6000823e3d90fd5b604051906113cb60608361137f565b565b67ffffffffffffffff811161137a57601f01601f191660200190565b604051906113f860408361137f565b600e82526d03130b630b731b2a7b31012b210160951b6020830152565b6040519061142460608361137f565b602982526803bb0b9321012b210160bd1b6040837f70656e64696e677265776172643a2025642c20616363756d756c61746564526560208201520152565b1561146957565b63630b374b60e01b60005260046000fd5b91908201809211610a8957565b600454600160401b81101561137a5760018101600455600060045482101561053e57600490527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03909216919091179055565b919061150e57604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b60035490600160401b82101561137a576001820160035560035482101561053e57600360008181526113cb939091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b016114ee565b1561158157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b604051906115d28261135e565b60006040838281528260208201520152565b906040516115f18161135e565b60406002829480548452600181015460208501520154910152565b906116156115c5565b50611622610ed883610506565b916020830180514211611633575050565b611642610f046103fe84610af4565b6040516370a0823160e01b81523060048201529190602090839060249082905afa90811561072c577fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d292600092611711575b50816116d9575b4281526116b1866116ab86610506565b906114ee565b516116d48651604051938493846040919493926060820195825260208201520152565b0390a2565b61170a6116fb610fbc6116f0610faa85514261133b565b60408a0151906112e0565b610fcf84610fca8a51936112c2565b865261169b565b61172b91925060203d60201161072557610717818361137f565b9038611694565b60035460005b818110611743575050565b8061174f60019261160c565b5001611738565b6040519061176560408361137f565b60088252677374617274696e6760c01b6020830152565b6040519061178b60408361137f565b600d82526c1d5c19185d1959081c1c1bdbdb609a1b6020830152565b604051906117b660408361137f565b600b82526a33b7ba3a32b7103ab9b2b960a91b6020830152565b604051906117df60408361137f565b600d82526c33b7ba3a32b7103ab9b2b9101960991b6020830152565b91909160008382019384129112908015821691151617610a8957565b6040519061182660408361137f565b601182527019dbdd1d195b881c995dd85c991119589d607a1b6020830152565b6040519061185560408361137f565b601282527119dbdd1d195b881d1c985b9cd9995c9c995960721b6020830152565b1561187d57565b60405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606490fd5b908092918237016000815290565b3d156118f0573d906118d6826113cd565b916118e4604051938461137f565b82523d6000602084013e565b606090565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526113cb9161193060648361137f565b611b62565b60005b8381106119485750506000910152565b8181015183820152602001611938565b9060209161197181518092818552858086019101611935565b601f01601f1916010190565b6119c06119ac916113cb93604051938492632d839cb360e21b6020850152604060248501526064840190611958565b90604483015203601f19810183528261137f565b611c4b565b6119c0906119f5926113cb9460405194859363ca47c4eb60e01b6020860152606060248601526084850190611958565b916044840152606483015203601f19810183528261137f565b906020610377928181520190611958565b611a4c6119c06113cb9260405192839163104c13eb60e21b60208401526020602484018181520190611958565b03601f19810183528261137f565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526113cb9161193060848361137f565b6044815110611b3d5760048101518101602481019190602090829003126101dd5760248101519067ffffffffffffffff82116101dd570190806043830112156101dd57602482015191611af0836113cd565b91611afe604051938461137f565b838352604482850101116101dd57611b3992611b21916044602085019101611935565b60405162461bcd60e51b815291829160048301611a0e565b0390fd5b60405163d935448560e01b815260206004820152908190611b39906024830190611958565b604080519092611bc7926001600160a01b0316906000908190611b85878661137f565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af1611bc16118c5565b91611c66565b805180611bd357505050565b6020908201829003126101dd5760200151611bed816101e2565b15611bf55750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b600080916020815191016a636f6e736f6c652e6c6f675afa50565b91929015611cc85750815115611c7a575090565b3b15611c835790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015611cdb5750805190602001fd5b60405162461bcd60e51b8152908190611b399060048301611a0e56fea2646970667358221220417cbfb94468624178319654b87d6460db0b5ba3bad2b49130f3f31562e7479064736f6c634300081a00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type MiniChefV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiniChefV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiniChefV3__factory extends ContractFactory {
  constructor(...args: MiniChefV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _reward: AddressLike,
    _rewardPerSecond: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _reward,
      _rewardPerSecond,
      owner,
      overrides || {}
    );
  }
  override deploy(
    _reward: AddressLike,
    _rewardPerSecond: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _reward,
      _rewardPerSecond,
      owner,
      overrides || {}
    ) as Promise<
      MiniChefV3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MiniChefV3__factory {
    return super.connect(runner) as MiniChefV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiniChefV3Interface {
    return new Interface(_abi) as MiniChefV3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MiniChefV3 {
    return new Contract(address, _abi, runner) as unknown as MiniChefV3;
  }
}
