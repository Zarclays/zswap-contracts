/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MiniChefV3,
  MiniChefV3Interface,
} from "../../../contracts/MiniChefV3.sol/MiniChefV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_reward",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "innerError",
        type: "bytes",
      },
    ],
    name: "BatchError",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawNotGood",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "LogRewardPerSecond",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "REWARD",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdateSelectedPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBoringERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerSecond",
        type: "uint256",
      },
    ],
    name: "setRewardPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "accRewardPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastRewardTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allocPoint",
            type: "uint256",
          },
        ],
        internalType: "struct MiniChefV3.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "rewardDebt",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346101ac576000611c0a3881900390601f8201601f191684016001600160401b0381118582101761019857918085926060946040528339810103126101955781516001600160a01b03811681036101915760208301516040909301516001600160a01b038116939084900361018d5782546001600160a01b0319163390811784556040517fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a27893602093919286600080516020611bea8339815191528180a36001600255608052806008558152a1508015801590610185575b15610140576000548160018060a01b038216600080516020611bea833981519152600080a36001600160a01b031990811691909117600055600180549091169055604051611a3890816101b2823960805181818161067601528181610f6c01526110310152f35b60405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152606490fd5b5060006100d9565b8280fd5b5080fd5b80fd5b634e487b7160e01b84526041600452602484fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063078dfbe7146101c7578063081e3eda146101c25780630ad58d2f146101bd5780630b62ee1c146101b85780631526fe27146101b357806317caf6f1146101ae57806318fccc76146101a95780631eaaa045146101a45780632f940c701461019f5780634e71e0c81461019a57806351eb05a614610195578063630b5ba11461019057806364482f791461018b57806366da58151461018657806378ed5d1f1461018157806379ba50971461017c57806379d12ffb146101775780637c516e94146101725780638da5cb5b1461016d5780638dbdbe6d146101685780638f10369a1461016357806393f1a40b1461015e57806398969e8214610159578063cab34c0814610154578063d1abb9071461014f578063d2423b511461014a5763e30c39781461014557600080fd5b61119a565b6110d5565b610f9b565b610f56565b610dd1565b610d76565b610d58565b610c91565b610c68565b610b8d565b610b4b565b610ada565b610a7f565b610a0b565b610958565b61093f565b610905565b610891565b6107c3565b6106a1565b6105b9565b61059b565b610543565b61049b565b61037a565b610339565b6101ec565b6001600160a01b038116036101dd57565b600080fd5b801515036101dd57565b346101dd5760603660031901126101dd57600435610209816101cc565b60243590610216826101e2565b60443591610223836101e2565b61023860018060a01b036000541633146111c3565b1561030d576001600160a01b03811691821580159190610305575b50156102c8576000546102b492906001600160a01b03908116167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018060a01b03166bffffffffffffffffffffffff60a01b6000541617600055565b600180546001600160a01b0319169055005b005b60405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b6044820152606490fd5b905038610253565b600180546001600160a01b0319166001600160a01b03909216919091179055005b60009103126101dd57565b346101dd5760003660031901126101dd576020600354604051908152f35b60609060031901126101dd576004359060243590604435610377816101cc565b90565b346101dd5761038836610357565b9190610393826114d9565b600083815260066020908152604080832033845290915290209082825410610459576103de60018301916103d86103cd8454925187611242565b64e8d4a51000900490565b90611275565b90556103eb82825461129d565b905561041881846104136103fe86610a64565b905460039190911b1c6001600160a01b031690565b6116da565b6040519081526001600160a01b039092169133907f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21329080602081015b0390a4005b6388606f9560e01b60005260046000fd5b9181601f840112156101dd5782359167ffffffffffffffff83116101dd576020808501948460051b0101116101dd57565b346101dd5760203660031901126101dd5760043567ffffffffffffffff81116101dd576104cc90369060040161046a565b60005b818110156102c6576001906104e98160051b8501356114d9565b50016104cf565b634e487b7160e01b600052603260045260246000fd5b60035481101561053e576003600081815291027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0191565b6104f0565b346101dd5760203660031901126101dd576004356003548110156101dd5761056a90610506565b50805461059760026001840154930154604051938493846040919493926060820195825260208201520152565b0390f35b346101dd5760003660031901126101dd576020600754604051908152f35b346101dd5760403660031901126101dd576004356024356105d9816101cc565b6105e2826114d9565b90826000526006602052600164e8d4a5100061062161061660406000203360018060a01b0316600052602052604060002090565b948554905190611242565b04920191610630835482611275565b92558180610670575b505060405190815233907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae06609249549080602081015b0390a3005b61069a917f00000000000000000000000000000000000000000000000000000000000000006116da565b3881610639565b346101dd5760603660031901126101dd576024356004356106c1826101cc565b61072d604435926106d1846101e2565b6106e660018060a01b036000541633146111c3565b6001600160a01b03811660008181526005602052604090205490949061070f9060ff16156112aa565b6107b6575b610728610723846007546112c2565b600755565b6112e5565b61074d61073861138f565b600081524260208201528260408201526113d6565b6001600160a01b038216600090815260056020526040902061077690805460ff19166001179055565b7f4710feb78e3bce8d2e3ca2989a8eb2f8bcd32a6a55b4535942c180fc4d2e295261066b6107a560045461128e565b604051938452929081906020820190565b6107be6115ff565b610714565b346101dd5760403660031901126101dd576024356004356107e3826101cc565b6000818152600660209081526040808320338452909152902060006001825492828155015560045482101561053e5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b82015461085190829085906001600160a01b03166116da565b6040519081526001600160a01b039092169133907f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b908060208101610454565b346101dd5760003660031901126101dd576001546001600160a01b0381166108ba33821461142c565b6000548160018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03199081169190911760005516600155005b346101dd5760203660031901126101dd5760606109236004356114d9565b6040805191805183526020810151602084015201516040820152f35b346101dd5760003660031901126101dd576102c66115ff565b346101dd5760603660031901126101dd5760043560243560443561097b816101e2565b61099060018060a01b036000541633146111c3565b6109fe575b60075460026109a384610506565b50015481039081116109f9578181018091116109f9577f942cc7e17a17c164bd977f32ab8c54265d5b9d481e4e352bf874f1e568874e7c916020916007558060026109ed86610506565b500155604051908152a2005b61120e565b610a066115ff565b610995565b346101dd5760203660031901126101dd577fde89cb17ac7f58f94792b3e91e086ed85403819c24ceea882491f960ccb1a2786020600435610a5760018060a01b036000541633146111c3565b80600855604051908152a1005b60045481101561053e57600460005260206000200190600090565b346101dd5760203660031901126101dd576004356004548110156101dd5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01546040516001600160a01b039091168152602090f35b346101dd5760003660031901126101dd57600154610b02336001600160a01b0383161461142c565b6000543360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b0319908116331760005516600155005b346101dd5760203660031901126101dd57600435610b68816101cc565b60018060a01b03166000526005602052602060ff604060002054166040519015158152f35b346101dd576101003660031901126101dd57600435610bab816101cc565b60243590610bb8826101cc565b604435610bc4816101cc565b606435926084359060a43560ff811681036101dd5760c435946001600160a01b031660e435813b156101dd5760009660ff889460e4976040519b8c9a8b9963d505accf60e01b8b5260018060a01b031660048b015260018060a01b031660248a01526044890152606488015216608486015260a485015260c48401525af18015610c6357610c4e57005b80610c5d60006102c69361136d565b8061032e565b6114cd565b346101dd5760003660031901126101dd576000546040516001600160a01b039091168152602090f35b346101dd57610c9f36610357565b9190610caa826114d9565b60008381526006602090815260408083206001600160a01b0388168452909152902080548381018091116109f95781600191610cfd9355019164e8d4a51000610cf68454925186611242565b0490611623565b9055610d1881610d0f6103fe85610a64565b3090339061171a565b6040519081526001600160a01b039092169133907f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47908060208101610454565b346101dd5760003660031901126101dd576020600854604051908152f35b346101dd5760403660031901126101dd576040610dbe602435600435610d9b826101cc565b6000526006602052826000209060018060a01b0316600052602052604060002090565b6001815491015482519182526020820152f35b346101dd5760403660031901126101dd57602435600435610df1826101cc565b610e32610e06610e0083610506565b50611496565b92610e1b836000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b610e4f610e436103fe855194610a64565b6001600160a01b031690565b6040516370a0823160e01b81523060048201529390602090859060249082905afa908115610c63576103cd610eb894600193610eaf9361059798600092610f25575b50602081015180421180610f1c575b610ec8575b5050508454611242565b91015490611275565b6040519081529081906020820190565b91610f09610f04610efb610f0e946040610ef2610ee9610f149a994261129d565b60085490611242565b91015190611242565b60075490611255565b611224565b611255565b906112c2565b388080610ea5565b50821515610ea0565b610f4891925060203d602011610f4f575b610f40818361136d565b8101906114be565b9038610e91565b503d610f36565b346101dd5760003660031901126101dd576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101dd57610fa936610357565b82610fb3816114d9565b92610fde610fcb836000526006602052604060002090565b3360009081526020919091526040902090565b610ffa6103cd8254610ff28582101561163f565b875190611242565b61101b60018301916103d86103cd611013855484611275565b995187611242565b905561102882825461129d565b905561105584847f00000000000000000000000000000000000000000000000000000000000000006116da565b61106681846104136103fe86610a64565b6040519081526001600160a01b03929092169133907f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec213290602090a460405190815233907f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495490806020810161066b565b60403660031901126101dd5760043567ffffffffffffffff81116101dd5761110190369060040161046a565b6024359161110e836101e2565b36819003601e190160005b838110156102c65760008160051b8401358381121561119657840180359067ffffffffffffffff82116111925760200181360381136111925790829161116460405180938193611680565b0390305af46111716116aa565b90158061118b575b6111865750600101611119565b6117b7565b5085611179565b8280fd5b5080fd5b346101dd5760003660031901126101dd576001546040516001600160a01b039091168152602090f35b156111ca57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b634e487b7160e01b600052601160045260246000fd5b9064e8d4a5100082029180830464e8d4a5100014901517156109f957565b818102929181159184041417156109f957565b811561125f570490565b634e487b7160e01b600052601260045260246000fd5b818103929160001380158285131691841216176109f957565b6000198101919082116109f957565b919082039182116109f957565b156112b157565b63630b374b60e01b60005260046000fd5b919082018092116109f957565b634e487b7160e01b600052604160045260246000fd5b600454600160401b81101561134c5760018101600455600060045482101561053e57600490527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03909216919091179055565b6112cf565b6060810190811067ffffffffffffffff82111761134c57604052565b90601f8019910116810190811067ffffffffffffffff82111761134c57604052565b6040519061139e60608361136d565b565b91906113c057604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b60035490600160401b82101561134c576001820160035560035482101561053e576003600081815261139e939091027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b016113a0565b1561143357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b6040519061148482611351565b60006040838281528260208201520152565b906040516114a381611351565b60406002829480548452600181015460208501520154910152565b908160209103126101dd575190565b6040513d6000823e3d90fd5b906114e2611477565b506114ef610e0083610506565b916020830180514211611500575050565b61150f610e436103fe84610a64565b6040516370a0823160e01b81523060048201529190602090839060249082905afa908115610c63577fcb7325664a4a3b7c7223eefc492a97ca4fdf94d46884621e5a8fae5a04b2b9d2926000926115de575b50816115a6575b42815261157e8661157886610506565b906113a0565b516115a18651604051938493846040919493926060820195825260208201520152565b0390a2565b6115d76115c8610efb6115bd610ee985514261129d565b60408a015190611242565b610f0e84610f098a5193611224565b8652611568565b6115f891925060203d602011610f4f57610f40818361136d565b9038611561565b60035460005b818110611610575050565b8061161c6001926114d9565b5001611605565b919091600083820193841291129080158216911516176109f957565b1561164657565b60405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606490fd5b908092918237016000815290565b67ffffffffffffffff811161134c57601f01601f191660200190565b3d156116d5573d906116bb8261168e565b916116c9604051938461136d565b82523d6000602084013e565b606090565b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448083019390935291815261139e9161171560648361136d565b61187b565b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815261139e9161171560848361136d565b60005b8381106117715750506000910152565b8181015183820152602001611761565b9060209161179a8151809281855285808601910161175e565b601f01601f1916010190565b906020610377928181520190611781565b60448151106118565760048101518101602481019190602090829003126101dd5760248101519067ffffffffffffffff82116101dd570190806043830112156101dd576024820151916118098361168e565b91611817604051938461136d565b838352604482850101116101dd576118529261183a91604460208501910161175e565b60405162461bcd60e51b8152918291600483016117a6565b0390fd5b60405163d935448560e01b815260206004820152908190611852906024830190611781565b6040805190926118e0926001600160a01b031690600090819061189e878661136d565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af16118da6116aa565b91611971565b805190811591821561194d575b5050156118f75750565b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b9091506020908201829003126101dd576020015161196a816101e2565b38806118ed565b919290156119d35750815115611985575090565b3b1561198e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156119e65750805190602001fd5b60405162461bcd60e51b815290819061185290600483016117a656fea2646970667358221220257266b97785382c0b0d7d014d578fe9abbb8bfac8c10f700e47a9024787d6a464736f6c634300081a00338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type MiniChefV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiniChefV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiniChefV3__factory extends ContractFactory {
  constructor(...args: MiniChefV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _reward: AddressLike,
    _rewardPerSecond: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _reward,
      _rewardPerSecond,
      owner,
      overrides || {}
    );
  }
  override deploy(
    _reward: AddressLike,
    _rewardPerSecond: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _reward,
      _rewardPerSecond,
      owner,
      overrides || {}
    ) as Promise<
      MiniChefV3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MiniChefV3__factory {
    return super.connect(runner) as MiniChefV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiniChefV3Interface {
    return new Interface(_abi) as MiniChefV3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MiniChefV3 {
    return new Contract(address, _abi, runner) as unknown as MiniChefV3;
  }
}
