/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SushiMakerExploitMock,
  SushiMakerExploitMockInterface,
} from "../../../contracts/mocks/SushiMakerExploitMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sushiMaker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiMaker",
    outputs: [
      {
        internalType: "contract zSwapMaker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034606e57601f61021738819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606e57516001600160a01b03811690819003606e5760805260405161018d908161008a8239608051818181607501526101280152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081632bbdf75b14610114575063bd1b820c1461003757600080fd5b34610111576040366003190112610111576004356001600160a01b0381169081900361010d57816024356001600160a01b0381169081900361010d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692833b1561010957604490836040519586948593632f46e08360e21b8552600485015260248401525af180156100fe576100d5575080f35b67ffffffffffffffff81116100ea5760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8280fd5b5080fd5b80fd5b90503461010d578160031936011261010d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f3fea2646970667358221220f786bcadd22875c0ccc8161807fba685f0291f68fa6342ad6ed5fc71e6eea90e64736f6c634300081a0033";

type SushiMakerExploitMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiMakerExploitMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiMakerExploitMock__factory extends ContractFactory {
  constructor(...args: SushiMakerExploitMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _sushiMaker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sushiMaker, overrides || {});
  }
  override deploy(
    _sushiMaker: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sushiMaker, overrides || {}) as Promise<
      SushiMakerExploitMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SushiMakerExploitMock__factory {
    return super.connect(runner) as SushiMakerExploitMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiMakerExploitMockInterface {
    return new Interface(_abi) as SushiMakerExploitMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SushiMakerExploitMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SushiMakerExploitMock;
  }
}
